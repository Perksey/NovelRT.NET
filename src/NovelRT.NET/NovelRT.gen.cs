// This file is part of NovelRT.NET.
// 
// You may modify and distribute NovelRT.NET under the terms
// of the MIT license. See the LICENSE file for details.
using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Text;
using Silk.NET.Core.Native;
using Silk.NET.Core.Attributes;
using Silk.NET.Core.Contexts;
using Silk.NET.Core.Loader;

#pragma warning disable 1591

namespace NovelRT.NET
{
    public unsafe partial class NovelRT : NativeAPI
    {

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getCpuLangKey")]
        public unsafe partial byte* GetCpuLangKey();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getCpuLangKey")]
        public partial string GetCpuLangKeyS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsNullptr")]
        public unsafe partial byte* GetErrMsgIsNullptr();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsNullptr")]
        public partial string GetErrMsgIsNullptrS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsNaN")]
        public unsafe partial byte* GetErrMsgIsNaN();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsNaN")]
        public partial string GetErrMsgIsNaNS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsDivideByZero")]
        public unsafe partial byte* GetErrMsgIsDivideByZero();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsDivideByZero")]
        public partial string GetErrMsgIsDivideByZeroS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsAlreadyDeletedOrRemoved")]
        public unsafe partial byte* GetErrMsgIsAlreadyDeletedOrRemoved();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_getErrMsgIsAlreadyDeletedOrRemoved")]
        public partial string GetErrMsgIsAlreadyDeletedOrRemovedS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(byte* targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial string TranslateErrorCodeS(byte* targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(byte* targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial string TranslateErrorCodeS(byte* targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(byte* targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial string TranslateErrorCodeS(byte* targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(ref byte targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial string TranslateErrorCodeS(ref byte targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(ref byte targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public partial string TranslateErrorCodeS(ref byte targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(ref byte targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public partial string TranslateErrorCodeS(ref byte targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(string targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial string TranslateErrorCodeS(string targetLanguage, byte* errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(string targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public partial string TranslateErrorCodeS(string targetLanguage, ref byte errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public unsafe partial byte* TranslateErrorCode(string targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Windowing/../NovelRTInteropUtils.h")]
        [NativeApi(EntryPoint = "NovelRT_translateErrorCode")]
        public partial string TranslateErrorCodeS(string targetLanguage, string errorPtr);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_isNaN")]
        public partial int GeoVector2FIsNaN(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_uniform")]
        public partial GeoVector2F GeoVector2FUniform(float value);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_zero")]
        public partial GeoVector2F GeoVector2FZero();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_one")]
        public partial GeoVector2F GeoVector2FOne();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector2FRotateToAngleAroundPoint(GeoVector2F* vector, float angleRotationValue, GeoVector2F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector2FRotateToAngleAroundPoint(GeoVector2F* vector, float angleRotationValue, GeoVector2F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector2FRotateToAngleAroundPoint(ref GeoVector2F vector, float angleRotationValue, GeoVector2F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector2FRotateToAngleAroundPoint(ref GeoVector2F vector, float angleRotationValue, GeoVector2F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_epsilonEquals")]
        public partial int GeoVector2FEpsilonEquals(GeoVector2F vector, GeoVector2F other, GeoVector2F epsilonValue);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_getNormalised")]
        public partial GeoVector2F GeoVector2FGetNormalised(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_getLength")]
        public partial float GeoVector2FGetLength(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_getMagnitude")]
        public partial float GeoVector2FGetMagnitude(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_equal")]
        public partial int GeoVector2FEqual(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_notEqual")]
        public partial int GeoVector2FNotEqual(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_lessThan")]
        public partial int GeoVector2FLessThan(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_lessThanOrEqualTo")]
        public partial int GeoVector2FLessThanOrEqualTo(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_greaterThan")]
        public partial int GeoVector2FGreaterThan(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_greaterThanOrEqualTo")]
        public partial int GeoVector2FGreaterThanOrEqualTo(GeoVector2F lhs, GeoVector2F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addVector")]
        public unsafe partial int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addVector")]
        public unsafe partial int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addVector")]
        public unsafe partial int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addVector")]
        public unsafe partial int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractVector")]
        public unsafe partial int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractVector")]
        public unsafe partial int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractVector")]
        public unsafe partial int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractVector")]
        public unsafe partial int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyVector")]
        public unsafe partial int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyVector")]
        public unsafe partial int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyVector")]
        public unsafe partial int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyVector")]
        public unsafe partial int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideVector")]
        public unsafe partial int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideVector")]
        public unsafe partial int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideVector")]
        public unsafe partial int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideVector")]
        public unsafe partial int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addFloat")]
        public unsafe partial int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addFloat")]
        public unsafe partial int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addFloat")]
        public unsafe partial int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addFloat")]
        public unsafe partial int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractFloat")]
        public unsafe partial int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractFloat")]
        public unsafe partial int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractFloat")]
        public unsafe partial int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractFloat")]
        public unsafe partial int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyFloat")]
        public unsafe partial int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyFloat")]
        public unsafe partial int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyFloat")]
        public unsafe partial int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyFloat")]
        public unsafe partial int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideFloat")]
        public unsafe partial int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideFloat")]
        public unsafe partial int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideFloat")]
        public unsafe partial int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideFloat")]
        public unsafe partial int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignVector")]
        public unsafe partial int GeoVector2FAddAssignVector(GeoVector2F* lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignVector")]
        public unsafe partial int GeoVector2FAddAssignVector(GeoVector2F* lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignVector")]
        public unsafe partial int GeoVector2FAddAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignVector")]
        public unsafe partial int GeoVector2FAddAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignVector")]
        public unsafe partial int GeoVector2FSubtractAssignVector(GeoVector2F* lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignVector")]
        public unsafe partial int GeoVector2FSubtractAssignVector(GeoVector2F* lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignVector")]
        public unsafe partial int GeoVector2FSubtractAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignVector")]
        public unsafe partial int GeoVector2FSubtractAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignVector")]
        public unsafe partial int GeoVector2FMultiplyAssignVector(GeoVector2F* lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignVector")]
        public unsafe partial int GeoVector2FMultiplyAssignVector(GeoVector2F* lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignVector")]
        public unsafe partial int GeoVector2FMultiplyAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignVector")]
        public unsafe partial int GeoVector2FMultiplyAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignVector")]
        public unsafe partial int GeoVector2FDivideAssignVector(GeoVector2F* lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignVector")]
        public unsafe partial int GeoVector2FDivideAssignVector(GeoVector2F* lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignVector")]
        public unsafe partial int GeoVector2FDivideAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignVector")]
        public unsafe partial int GeoVector2FDivideAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignFloat")]
        public unsafe partial int GeoVector2FAddAssignFloat(GeoVector2F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignFloat")]
        public unsafe partial int GeoVector2FAddAssignFloat(GeoVector2F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignFloat")]
        public unsafe partial int GeoVector2FAddAssignFloat(ref GeoVector2F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_addAssignFloat")]
        public unsafe partial int GeoVector2FAddAssignFloat(ref GeoVector2F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignFloat")]
        public unsafe partial int GeoVector2FSubtractAssignFloat(GeoVector2F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignFloat")]
        public unsafe partial int GeoVector2FSubtractAssignFloat(GeoVector2F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignFloat")]
        public unsafe partial int GeoVector2FSubtractAssignFloat(ref GeoVector2F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_subtractAssignFloat")]
        public unsafe partial int GeoVector2FSubtractAssignFloat(ref GeoVector2F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignFloat")]
        public unsafe partial int GeoVector2FMultiplyAssignFloat(GeoVector2F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignFloat")]
        public unsafe partial int GeoVector2FMultiplyAssignFloat(GeoVector2F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignFloat")]
        public unsafe partial int GeoVector2FMultiplyAssignFloat(ref GeoVector2F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_multiplyAssignFloat")]
        public unsafe partial int GeoVector2FMultiplyAssignFloat(ref GeoVector2F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignFloat")]
        public unsafe partial int GeoVector2FDivideAssignFloat(GeoVector2F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignFloat")]
        public unsafe partial int GeoVector2FDivideAssignFloat(GeoVector2F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignFloat")]
        public unsafe partial int GeoVector2FDivideAssignFloat(ref GeoVector2F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector2F_divideAssignFloat")]
        public unsafe partial int GeoVector2FDivideAssignFloat(ref GeoVector2F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 20 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_zero")]
        public partial GeoBounds GeoBoundsZero();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_getCornerInLocalSpace")]
        public partial GeoVector2F GeoBoundsGetCornerInLocalSpace(GeoBounds bounds, int index);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_getCornerInWorldSpace")]
        public partial GeoVector2F GeoBoundsGetCornerInWorldSpace(GeoBounds bounds, int index);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_pointIsWithinBounds")]
        public partial int GeoBoundsPointIsWithinBounds(GeoBounds bounds, GeoVector2F point);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_getExtents")]
        public partial GeoVector2F GeoBoundsGetExtents(GeoBounds bounds);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_intersectsWith")]
        public unsafe partial int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_intersectsWith")]
        public unsafe partial int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_intersectsWith")]
        public unsafe partial int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_intersectsWith")]
        public unsafe partial int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_equal")]
        public partial int GeoBoundsEqual(GeoBounds lhs, GeoBounds rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoBounds_notEqual")]
        public partial int GeoBoundsNotEqual(GeoBounds lhs, GeoBounds rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 18 in ext/NovelRT/include\\NovelRT.Interop/NovelRTTransform.h")]
        [NativeApi(EntryPoint = "NovelRT_Transform_getAABB")]
        public partial GeoBounds TransformGetAABB(Transform transform);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 18 in ext/NovelRT/include\\NovelRT.Interop/NovelRTTransform.h")]
        [NativeApi(EntryPoint = "NovelRT_Transform_getBounds")]
        public partial GeoBounds TransformGetBounds(Transform transform);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 21 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_Create")]
        public unsafe partial RGBAConfigHandle* RGBAConfigCreate(int r, int g, int b, int a);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(RGBAConfigHandle* colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(RGBAConfigHandle* colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(RGBAConfigHandle* colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(RGBAConfigHandle* colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getR")]
        public unsafe partial int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setR")]
        public unsafe partial int RGBAConfigSetR(RGBAConfigHandle* colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setR")]
        public unsafe partial int RGBAConfigSetR(RGBAConfigHandle* colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setR")]
        public unsafe partial int RGBAConfigSetR(ref RGBAConfigHandle colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setR")]
        public unsafe partial int RGBAConfigSetR(ref RGBAConfigHandle colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(RGBAConfigHandle* colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(RGBAConfigHandle* colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(RGBAConfigHandle* colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(RGBAConfigHandle* colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getG")]
        public unsafe partial int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setG")]
        public unsafe partial int RGBAConfigSetG(RGBAConfigHandle* colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setG")]
        public unsafe partial int RGBAConfigSetG(RGBAConfigHandle* colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setG")]
        public unsafe partial int RGBAConfigSetG(ref RGBAConfigHandle colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setG")]
        public unsafe partial int RGBAConfigSetG(ref RGBAConfigHandle colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(RGBAConfigHandle* colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(RGBAConfigHandle* colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(RGBAConfigHandle* colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(RGBAConfigHandle* colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getB")]
        public unsafe partial int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setB")]
        public unsafe partial int RGBAConfigSetB(RGBAConfigHandle* colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setB")]
        public unsafe partial int RGBAConfigSetB(RGBAConfigHandle* colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setB")]
        public unsafe partial int RGBAConfigSetB(ref RGBAConfigHandle colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setB")]
        public unsafe partial int RGBAConfigSetB(ref RGBAConfigHandle colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(RGBAConfigHandle* colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(RGBAConfigHandle* colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(RGBAConfigHandle* colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(RGBAConfigHandle* colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getA")]
        public unsafe partial int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setA")]
        public unsafe partial int RGBAConfigSetA(RGBAConfigHandle* colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setA")]
        public unsafe partial int RGBAConfigSetA(RGBAConfigHandle* colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setA")]
        public unsafe partial int RGBAConfigSetA(ref RGBAConfigHandle colourConfig, int inputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_setA")]
        public unsafe partial int RGBAConfigSetA(ref RGBAConfigHandle colourConfig, int inputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getRScalar")]
        public unsafe partial int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getGScalar")]
        public unsafe partial int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getBScalar")]
        public unsafe partial int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, float* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, float* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_getAScalar")]
        public unsafe partial int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_destroy")]
        public unsafe partial int RGBAConfigDestroy(RGBAConfigHandle* arg0, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_destroy")]
        public unsafe partial int RGBAConfigDestroy(RGBAConfigHandle* arg0, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_destroy")]
        public unsafe partial int RGBAConfigDestroy(ref RGBAConfigHandle arg0, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        [NativeApi(EntryPoint = "NovelRT_RGBAConfig_destroy")]
        public unsafe partial int RGBAConfigDestroy(ref RGBAConfigHandle arg0, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 25 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_create")]
        public unsafe partial WindowingServiceHandle* WindowingServiceCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, byte* windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, byte* windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, ref byte windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, ref byte windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, string windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, string windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, byte* windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, byte* windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, ref byte windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, ref byte windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, string windowTitle, int transparencyEnabled, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_initialiseWindow")]
        public unsafe partial int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, string windowTitle, int transparencyEnabled, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_tearDown")]
        public unsafe partial int WindowingServiceTearDown(WindowingServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_tearDown")]
        public unsafe partial int WindowingServiceTearDown(WindowingServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_tearDown")]
        public unsafe partial int WindowingServiceTearDown(ref WindowingServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_tearDown")]
        public unsafe partial int WindowingServiceTearDown(ref WindowingServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, byte** windowTitle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, byte** windowTitle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, ref byte* windowTitle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, ref byte* windowTitle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, byte** windowTitle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, byte** windowTitle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, ref byte* windowTitle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowTitle")]
        public unsafe partial int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, ref byte* windowTitle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, byte* value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, byte* value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, ref byte value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, ref byte value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, string value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, string value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, byte* value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, byte* value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, ref byte value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, ref byte value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, string value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowTitle")]
        public unsafe partial int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, string value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowSize")]
        public unsafe partial int WindowingServiceSetWindowSize(WindowingServiceHandle* service, GeoVector2F value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowSize")]
        public unsafe partial int WindowingServiceSetWindowSize(WindowingServiceHandle* service, GeoVector2F value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowSize")]
        public unsafe partial int WindowingServiceSetWindowSize(ref WindowingServiceHandle service, GeoVector2F value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_setWindowSize")]
        public unsafe partial int WindowingServiceSetWindowSize(ref WindowingServiceHandle service, GeoVector2F value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(WindowingServiceHandle* service, GeoVector2F* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(WindowingServiceHandle* service, GeoVector2F* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(WindowingServiceHandle* service, ref GeoVector2F output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(WindowingServiceHandle* service, ref GeoVector2F output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, GeoVector2F* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, GeoVector2F* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, ref GeoVector2F output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        [NativeApi(EntryPoint = "NovelRT_WindowingService_getWindowSize")]
        public unsafe partial int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, ref GeoVector2F output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(WindowingServiceHandle* windowingService, RenderingServiceHandle** outputRenderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(WindowingServiceHandle* windowingService, RenderingServiceHandle** outputRenderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(WindowingServiceHandle* windowingService, ref RenderingServiceHandle* outputRenderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(WindowingServiceHandle* windowingService, ref RenderingServiceHandle* outputRenderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(ref WindowingServiceHandle windowingService, RenderingServiceHandle** outputRenderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(ref WindowingServiceHandle windowingService, RenderingServiceHandle** outputRenderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(ref WindowingServiceHandle windowingService, ref RenderingServiceHandle* outputRenderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_create")]
        public unsafe partial int RenderingServiceCreate(ref WindowingServiceHandle windowingService, ref RenderingServiceHandle* outputRenderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_initialiseRendering")]
        public unsafe partial int RenderingServiceInitialiseRendering(RenderingServiceHandle* renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_initialiseRendering")]
        public unsafe partial int RenderingServiceInitialiseRendering(RenderingServiceHandle* renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_initialiseRendering")]
        public unsafe partial int RenderingServiceInitialiseRendering(ref RenderingServiceHandle renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_initialiseRendering")]
        public unsafe partial int RenderingServiceInitialiseRendering(ref RenderingServiceHandle renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_tearDown")]
        public unsafe partial int RenderingServiceTearDown(RenderingServiceHandle* renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_tearDown")]
        public unsafe partial int RenderingServiceTearDown(RenderingServiceHandle* renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_tearDown")]
        public unsafe partial int RenderingServiceTearDown(ref RenderingServiceHandle renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_tearDown")]
        public unsafe partial int RenderingServiceTearDown(ref RenderingServiceHandle renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithFile")]
        public unsafe partial int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createImageRectWithNothing")]
        public unsafe partial int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createBasicFillRect")]
        public unsafe partial int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_createTextRect")]
        public unsafe partial int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, CameraHandle** outputCamera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, CameraHandle** outputCamera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, ref CameraHandle* outputCamera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, ref CameraHandle* outputCamera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, CameraHandle** outputCamera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, CameraHandle** outputCamera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, ref CameraHandle* outputCamera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getCamera")]
        public unsafe partial int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, ref CameraHandle* outputCamera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_beginFrame")]
        public unsafe partial int RenderingServiceBeginFrame(RenderingServiceHandle* renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_beginFrame")]
        public unsafe partial int RenderingServiceBeginFrame(RenderingServiceHandle* renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_beginFrame")]
        public unsafe partial int RenderingServiceBeginFrame(ref RenderingServiceHandle renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_beginFrame")]
        public unsafe partial int RenderingServiceBeginFrame(ref RenderingServiceHandle renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_endFrame")]
        public unsafe partial int RenderingServiceEndFrame(RenderingServiceHandle* renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_endFrame")]
        public unsafe partial int RenderingServiceEndFrame(RenderingServiceHandle* renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_endFrame")]
        public unsafe partial int RenderingServiceEndFrame(ref RenderingServiceHandle renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_endFrame")]
        public unsafe partial int RenderingServiceEndFrame(ref RenderingServiceHandle renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, RGBAConfigHandle* colour, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, RGBAConfigHandle* colour, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, ref RGBAConfigHandle colour, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, ref RGBAConfigHandle colour, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, RGBAConfigHandle* colour, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, RGBAConfigHandle* colour, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, ref RGBAConfigHandle colour, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_setBackgroundColour")]
        public unsafe partial int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, ref RGBAConfigHandle colour, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithNothing")]
        public unsafe partial int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, byte* fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, byte* fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, ref byte fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, ref byte fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, string fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, string fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, byte* fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, byte* fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, string fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, string fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, byte* fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, byte* fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, ref byte fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, ref byte fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, string fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, string fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, byte* fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, byte* fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, string fileTarget, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getTextureWithFile")]
        public unsafe partial int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, string fileTarget, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_getFontSet")]
        public unsafe partial int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_destroy")]
        public unsafe partial int RenderingServiceDestroy(RenderingServiceHandle* renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_destroy")]
        public unsafe partial int RenderingServiceDestroy(RenderingServiceHandle* renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_destroy")]
        public unsafe partial int RenderingServiceDestroy(ref RenderingServiceHandle renderingService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderingService_destroy")]
        public unsafe partial int RenderingServiceDestroy(ref RenderingServiceHandle renderingService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_create")]
        public unsafe partial int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, int* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, int* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, ref int result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, ref int result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, int* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, int* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, ref int result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getIsFpsCounterVisible")]
        public unsafe partial int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, ref int result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setIsFpsCounterVisible")]
        public unsafe partial int DebugServiceSetIsFpsCounterVisible(DebugServiceHandle* service, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setIsFpsCounterVisible")]
        public unsafe partial int DebugServiceSetIsFpsCounterVisible(DebugServiceHandle* service, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setIsFpsCounterVisible")]
        public unsafe partial int DebugServiceSetIsFpsCounterVisible(ref DebugServiceHandle service, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setIsFpsCounterVisible")]
        public unsafe partial int DebugServiceSetIsFpsCounterVisible(ref DebugServiceHandle service, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, uint* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, uint* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, ref uint outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, ref uint outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, uint* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, uint* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, ref uint outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_getFramesPerSecond")]
        public unsafe partial int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, ref uint outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setFramesPerSecond")]
        public unsafe partial int DebugServiceSetFramesPerSecond(DebugServiceHandle* service, uint value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setFramesPerSecond")]
        public unsafe partial int DebugServiceSetFramesPerSecond(DebugServiceHandle* service, uint value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setFramesPerSecond")]
        public unsafe partial int DebugServiceSetFramesPerSecond(ref DebugServiceHandle service, uint value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        [NativeApi(EntryPoint = "NovelRT_DebugService_setFramesPerSecond")]
        public unsafe partial int DebugServiceSetFramesPerSecond(ref DebugServiceHandle service, uint value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_create")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitle")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitle(byte* core);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitle")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitle(ref byte core);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitle")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitle(string core);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitleAndLevel")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitleAndLevel(byte* core, LogLevel level);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitleAndLevel")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitleAndLevel(ref byte core, LogLevel level);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 25 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_createCustomTitleAndLevel")]
        public unsafe partial LoggingServiceHandle* LoggingServiceCreateCustomTitleAndLevel(string core, LogLevel level);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, byte* message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, byte* message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, ref byte message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, ref byte message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, string message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(LoggingServiceHandle* service, string message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, byte* message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, byte* message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, ref byte message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, ref byte message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, string message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_log")]
        public unsafe partial int LoggingServiceLog(ref LoggingServiceHandle service, string message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(LoggingServiceHandle* service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInfoLine")]
        public unsafe partial int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(LoggingServiceHandle* service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logErrorLine")]
        public unsafe partial int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(LoggingServiceHandle* service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logWarningLine")]
        public unsafe partial int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(LoggingServiceHandle* service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, byte* message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, byte* message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, ref byte message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, ref byte message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, string message, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logDebugLine")]
        public unsafe partial int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, string message, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, byte* message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, byte* message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, ref byte message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, ref byte message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, string message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(LoggingServiceHandle* service, string message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, byte* message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, byte* message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, ref byte message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, ref byte message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, string message, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_logInternal")]
        public unsafe partial int LoggingServiceLogInternal(ref LoggingServiceHandle service, string message, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_setLogLevel")]
        public unsafe partial int LoggingServiceSetLogLevel(LoggingServiceHandle* service, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_setLogLevel")]
        public unsafe partial int LoggingServiceSetLogLevel(LoggingServiceHandle* service, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_setLogLevel")]
        public unsafe partial int LoggingServiceSetLogLevel(ref LoggingServiceHandle service, LogLevel level, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_setLogLevel")]
        public unsafe partial int LoggingServiceSetLogLevel(ref LoggingServiceHandle service, LogLevel level, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, byte* exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, byte* exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, ref byte exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, ref byte exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, string exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, string exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, byte* exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, byte* exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, ref byte exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, ref byte exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, string exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, string exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, byte* exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, byte* exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, ref byte exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, ref byte exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, string exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, string exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, byte* exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, byte* exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, ref byte exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, ref byte exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, string exceptionMessage, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNullPtr")]
        public unsafe partial int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, string exceptionMessage, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, byte* exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, byte* exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, ref byte exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, ref byte exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, string exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, string exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, byte* exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, byte* exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, ref byte exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, ref byte exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, string exceptionMessage, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        [NativeApi(EntryPoint = "NovelRT_LoggingService_throwIfNotZero")]
        public unsafe partial int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, string exceptionMessage, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 21 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_create")]
        public unsafe partial AudioServiceHandle* AudioServiceCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_destroy")]
        public unsafe partial int AudioServiceDestroy(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_destroy")]
        public unsafe partial int AudioServiceDestroy(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_destroy")]
        public unsafe partial int AudioServiceDestroy(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_destroy")]
        public unsafe partial int AudioServiceDestroy(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(AudioServiceHandle* service, int* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(AudioServiceHandle* service, int* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(AudioServiceHandle* service, ref int output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(AudioServiceHandle* service, ref int output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(ref AudioServiceHandle service, int* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(ref AudioServiceHandle service, int* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(ref AudioServiceHandle service, ref int output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_initialiseAudio")]
        public unsafe partial int AudioServiceInitialiseAudio(ref AudioServiceHandle service, ref int output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, byte* input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, byte* input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, byte* input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, byte* input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, ref byte input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, ref byte input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, ref byte input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, ref byte input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, string input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, string input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, string input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(AudioServiceHandle* service, string input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, byte* input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, byte* input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, byte* input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, byte* input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, ref byte input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, ref byte input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, ref byte input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, ref byte input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, string input, IteratorHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, string input, IteratorHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, string input, ref IteratorHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "loadMusic")]
        public unsafe partial int LoadMusic(ref AudioServiceHandle service, string input, ref IteratorHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundVolume")]
        public unsafe partial int AudioServiceSetSoundVolume(AudioServiceHandle* service, uint source, float val, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundVolume")]
        public unsafe partial int AudioServiceSetSoundVolume(AudioServiceHandle* service, uint source, float val, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundVolume")]
        public unsafe partial int AudioServiceSetSoundVolume(ref AudioServiceHandle service, uint source, float val, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundVolume")]
        public unsafe partial int AudioServiceSetSoundVolume(ref AudioServiceHandle service, uint source, float val, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundPosition")]
        public unsafe partial int AudioServiceSetSoundPosition(AudioServiceHandle* service, uint source, float posX, float posY, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundPosition")]
        public unsafe partial int AudioServiceSetSoundPosition(AudioServiceHandle* service, uint source, float posX, float posY, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundPosition")]
        public unsafe partial int AudioServiceSetSoundPosition(ref AudioServiceHandle service, uint source, float posX, float posY, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setSoundPosition")]
        public unsafe partial int AudioServiceSetSoundPosition(ref AudioServiceHandle service, uint source, float posX, float posY, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_resumeMusic")]
        public unsafe partial int AudioServiceResumeMusic(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_resumeMusic")]
        public unsafe partial int AudioServiceResumeMusic(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_resumeMusic")]
        public unsafe partial int AudioServiceResumeMusic(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_resumeMusic")]
        public unsafe partial int AudioServiceResumeMusic(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(AudioServiceHandle* service, IteratorHandle* handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(AudioServiceHandle* service, IteratorHandle* handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(AudioServiceHandle* service, ref IteratorHandle handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(AudioServiceHandle* service, ref IteratorHandle handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(ref AudioServiceHandle service, IteratorHandle* handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(ref AudioServiceHandle service, IteratorHandle* handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(ref AudioServiceHandle service, ref IteratorHandle handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playMusic")]
        public unsafe partial int AudioServicePlayMusic(ref AudioServiceHandle service, ref IteratorHandle handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_pauseMusic")]
        public unsafe partial int AudioServicePauseMusic(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_pauseMusic")]
        public unsafe partial int AudioServicePauseMusic(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_pauseMusic")]
        public unsafe partial int AudioServicePauseMusic(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_pauseMusic")]
        public unsafe partial int AudioServicePauseMusic(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopMusic")]
        public unsafe partial int AudioServiceStopMusic(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopMusic")]
        public unsafe partial int AudioServiceStopMusic(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopMusic")]
        public unsafe partial int AudioServiceStopMusic(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopMusic")]
        public unsafe partial int AudioServiceStopMusic(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setMusicVolume")]
        public unsafe partial int AudioServiceSetMusicVolume(AudioServiceHandle* service, float value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setMusicVolume")]
        public unsafe partial int AudioServiceSetMusicVolume(AudioServiceHandle* service, float value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setMusicVolume")]
        public unsafe partial int AudioServiceSetMusicVolume(ref AudioServiceHandle service, float value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_setMusicVolume")]
        public unsafe partial int AudioServiceSetMusicVolume(ref AudioServiceHandle service, float value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_checkSources")]
        public unsafe partial int AudioServiceCheckSources(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_checkSources")]
        public unsafe partial int AudioServiceCheckSources(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_checkSources")]
        public unsafe partial int AudioServiceCheckSources(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_checkSources")]
        public unsafe partial int AudioServiceCheckSources(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, string input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, string input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, string input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(AudioServiceHandle* service, string input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, string input, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, string input, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, string input, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_loadSound")]
        public unsafe partial int AudioServiceLoadSound(ref AudioServiceHandle service, string input, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_unload")]
        public unsafe partial int AudioServiceUnload(AudioServiceHandle* service, uint handle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_unload")]
        public unsafe partial int AudioServiceUnload(AudioServiceHandle* service, uint handle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_unload")]
        public unsafe partial int AudioServiceUnload(ref AudioServiceHandle service, uint handle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_unload")]
        public unsafe partial int AudioServiceUnload(ref AudioServiceHandle service, uint handle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playSound")]
        public unsafe partial int AudioServicePlaySound(AudioServiceHandle* service, uint handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playSound")]
        public unsafe partial int AudioServicePlaySound(AudioServiceHandle* service, uint handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playSound")]
        public unsafe partial int AudioServicePlaySound(ref AudioServiceHandle service, uint handle, int loops, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_playSound")]
        public unsafe partial int AudioServicePlaySound(ref AudioServiceHandle service, uint handle, int loops, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopSound")]
        public unsafe partial int AudioServiceStopSound(AudioServiceHandle* service, uint handle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopSound")]
        public unsafe partial int AudioServiceStopSound(AudioServiceHandle* service, uint handle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopSound")]
        public unsafe partial int AudioServiceStopSound(ref AudioServiceHandle service, uint handle, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_stopSound")]
        public unsafe partial int AudioServiceStopSound(ref AudioServiceHandle service, uint handle, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_tearDown")]
        public unsafe partial int AudioServiceTearDown(AudioServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_tearDown")]
        public unsafe partial int AudioServiceTearDown(AudioServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_tearDown")]
        public unsafe partial int AudioServiceTearDown(ref AudioServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        [NativeApi(EntryPoint = "NovelRT_AudioService_tearDown")]
        public unsafe partial int AudioServiceTearDown(ref AudioServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, KeyState* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, KeyState* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, ref KeyState output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, ref KeyState output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, KeyState* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, KeyState* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, ref KeyState output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getCurrentState")]
        public unsafe partial int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, ref KeyState output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_getChangeCount")]
        public unsafe partial int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_compareChangeLog")]
        public unsafe partial int KeyStateFrameChangeLogCompareChangeLog(ChangeLogHandle* lhs, KeyState rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_compareChangeLog")]
        public partial int KeyStateFrameChangeLogCompareChangeLog(ref ChangeLogHandle lhs, KeyState rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_compareKeyState")]
        public unsafe partial int KeyStateFrameChangeLogCompareKeyState(KeyState lhs, ChangeLogHandle* rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        [NativeApi(EntryPoint = "NovelRT_KeyStateFrameChangeLog_compareKeyState")]
        public partial int KeyStateFrameChangeLogCompareKeyState(KeyState lhs, ref ChangeLogHandle rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_executeObjectBehaviour")]
        public unsafe partial int InputBasicInteractionRectExecuteObjectBehaviour(BasicInteractionRectHandle* @object, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_executeObjectBehaviour")]
        public unsafe partial int InputBasicInteractionRectExecuteObjectBehaviour(BasicInteractionRectHandle* @object, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_executeObjectBehaviour")]
        public unsafe partial int InputBasicInteractionRectExecuteObjectBehaviour(ref BasicInteractionRectHandle @object, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_executeObjectBehaviour")]
        public unsafe partial int InputBasicInteractionRectExecuteObjectBehaviour(ref BasicInteractionRectHandle @object, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getTransform")]
        public unsafe partial int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setTransform")]
        public unsafe partial int InputBasicInteractionRectSetTransform(BasicInteractionRectHandle* @object, Transform transform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setTransform")]
        public unsafe partial int InputBasicInteractionRectSetTransform(BasicInteractionRectHandle* @object, Transform transform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setTransform")]
        public unsafe partial int InputBasicInteractionRectSetTransform(ref BasicInteractionRectHandle @object, Transform transform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setTransform")]
        public unsafe partial int InputBasicInteractionRectSetTransform(ref BasicInteractionRectHandle @object, Transform transform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getLayer")]
        public unsafe partial int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setLayer")]
        public unsafe partial int InputBasicInteractionRectSetLayer(BasicInteractionRectHandle* @object, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setLayer")]
        public unsafe partial int InputBasicInteractionRectSetLayer(BasicInteractionRectHandle* @object, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setLayer")]
        public unsafe partial int InputBasicInteractionRectSetLayer(ref BasicInteractionRectHandle @object, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setLayer")]
        public unsafe partial int InputBasicInteractionRectSetLayer(ref BasicInteractionRectHandle @object, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, int* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, int* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, ref int outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getActive")]
        public unsafe partial int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, ref int outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setActive")]
        public unsafe partial int InputBasicInteractionRectSetActive(BasicInteractionRectHandle* @object, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setActive")]
        public unsafe partial int InputBasicInteractionRectSetActive(BasicInteractionRectHandle* @object, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setActive")]
        public unsafe partial int InputBasicInteractionRectSetActive(ref BasicInteractionRectHandle @object, int value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setActive")]
        public unsafe partial int InputBasicInteractionRectSetActive(ref BasicInteractionRectHandle @object, int value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_validateInteractionPrimeter")]
        public unsafe partial int InputBasicInteractionRectValidateInteractionPrimeter(BasicInteractionRectHandle* @object, GeoVector2F mousePosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_validateInteractionPrimeter")]
        public unsafe partial int InputBasicInteractionRectValidateInteractionPrimeter(BasicInteractionRectHandle* @object, GeoVector2F mousePosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_validateInteractionPrimeter")]
        public unsafe partial int InputBasicInteractionRectValidateInteractionPrimeter(ref BasicInteractionRectHandle @object, GeoVector2F mousePosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_validateInteractionPrimeter")]
        public unsafe partial int InputBasicInteractionRectValidateInteractionPrimeter(ref BasicInteractionRectHandle @object, GeoVector2F mousePosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, ref KeyCode outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, ref KeyCode outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode* outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode* outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, ref KeyCode outputValue, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_getSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, ref KeyCode outputValue, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectSetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectSetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectSetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_setSubscribedKey")]
        public unsafe partial int InputBasicInteractionRectSetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction(BasicInteractionRectHandle* @object, void* ptr, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction(BasicInteractionRectHandle* @object, void* ptr, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction<T0>(BasicInteractionRectHandle* @object, ref T0 ptr, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction<T0>(BasicInteractionRectHandle* @object, ref T0 ptr, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction(ref BasicInteractionRectHandle @object, void* ptr, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction(ref BasicInteractionRectHandle @object, void* ptr, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction<T0>(ref BasicInteractionRectHandle @object, ref T0 ptr, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        [NativeApi(EntryPoint = "NovelRT_Input_BasicInteractionRect_addInteraction")]
        public unsafe partial int InputBasicInteractionRectAddInteraction<T0>(ref BasicInteractionRectHandle @object, ref T0 ptr, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 27 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_create")]
        public unsafe partial InteractionServiceHandle* InteractionServiceCreate(WindowingServiceHandle* windowingService);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 27 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_create")]
        public unsafe partial InteractionServiceHandle* InteractionServiceCreate(ref WindowingServiceHandle windowingService);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_consumePlayerInput")]
        public unsafe partial int InteractionServiceConsumePlayerInput(InteractionServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_consumePlayerInput")]
        public unsafe partial int InteractionServiceConsumePlayerInput(InteractionServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_consumePlayerInput")]
        public unsafe partial int InteractionServiceConsumePlayerInput(ref InteractionServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_consumePlayerInput")]
        public unsafe partial int InteractionServiceConsumePlayerInput(ref InteractionServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_createBasicInteractionRect")]
        public unsafe partial int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_executeClickedInteractable")]
        public unsafe partial int InteractionServiceExecuteClickedInteractable(InteractionServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_executeClickedInteractable")]
        public unsafe partial int InteractionServiceExecuteClickedInteractable(InteractionServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_executeClickedInteractable")]
        public unsafe partial int InteractionServiceExecuteClickedInteractable(ref InteractionServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_executeClickedInteractable")]
        public unsafe partial int InteractionServiceExecuteClickedInteractable(ref InteractionServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_setScreenSize")]
        public unsafe partial int InteractionServiceSetScreenSize(InteractionServiceHandle* service, GeoVector2F value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_setScreenSize")]
        public unsafe partial int InteractionServiceSetScreenSize(InteractionServiceHandle* service, GeoVector2F value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_setScreenSize")]
        public unsafe partial int InteractionServiceSetScreenSize(ref InteractionServiceHandle service, GeoVector2F value, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_setScreenSize")]
        public unsafe partial int InteractionServiceSetScreenSize(ref InteractionServiceHandle service, GeoVector2F value, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ChangeLogHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ChangeLogHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ref ChangeLogHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ref ChangeLogHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ChangeLogHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ChangeLogHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ref ChangeLogHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        [NativeApi(EntryPoint = "NovelRT_InteractionService_getKeyState")]
        public unsafe partial int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ref ChangeLogHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_create")]
        public unsafe partial int TimestampCreate(ulong ticks, TimestampHandle** outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_create")]
        public unsafe partial int TimestampCreate(ulong ticks, TimestampHandle** outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_create")]
        public unsafe partial int TimestampCreate(ulong ticks, ref TimestampHandle* outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_create")]
        public unsafe partial int TimestampCreate(ulong ticks, ref TimestampHandle* outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_isNaN")]
        public unsafe partial int TimestampIsNaN(TimestampHandle* timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_isNaN")]
        public unsafe partial int TimestampIsNaN(TimestampHandle* timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_isNaN")]
        public unsafe partial int TimestampIsNaN(ref TimestampHandle timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_isNaN")]
        public unsafe partial int TimestampIsNaN(ref TimestampHandle timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(TimestampHandle* timestamp, double* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(TimestampHandle* timestamp, double* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(TimestampHandle* timestamp, ref double output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(TimestampHandle* timestamp, ref double output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(ref TimestampHandle timestamp, double* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(ref TimestampHandle timestamp, double* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(ref TimestampHandle timestamp, ref double output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsDouble")]
        public unsafe partial int TimestampGetSecondsDouble(ref TimestampHandle timestamp, ref double output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(TimestampHandle* timestamp, float* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(TimestampHandle* timestamp, float* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(TimestampHandle* timestamp, ref float output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(TimestampHandle* timestamp, ref float output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(ref TimestampHandle timestamp, float* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(ref TimestampHandle timestamp, float* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(ref TimestampHandle timestamp, ref float output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_getSecondsFloat")]
        public unsafe partial int TimestampGetSecondsFloat(ref TimestampHandle timestamp, ref float output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_zero")]
        public unsafe partial int TimestampZero(TimestampHandle** outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_zero")]
        public unsafe partial int TimestampZero(TimestampHandle** outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_zero")]
        public unsafe partial int TimestampZero(ref TimestampHandle* outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_zero")]
        public unsafe partial int TimestampZero(ref TimestampHandle* outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_fromSeconds")]
        public unsafe partial int TimestampFromSeconds(double seconds, TimestampHandle** outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_fromSeconds")]
        public unsafe partial int TimestampFromSeconds(double seconds, TimestampHandle** outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_fromSeconds")]
        public unsafe partial int TimestampFromSeconds(double seconds, ref TimestampHandle* outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_fromSeconds")]
        public unsafe partial int TimestampFromSeconds(double seconds, ref TimestampHandle* outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addTimestamp")]
        public unsafe partial int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractTimestamp")]
        public unsafe partial int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyTimestamp")]
        public unsafe partial int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideTimestamp")]
        public unsafe partial int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(TimestampHandle* first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(TimestampHandle* first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_addAssignTimestamp")]
        public unsafe partial int TimestampAddAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(TimestampHandle* first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(TimestampHandle* first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_subtractAssignTimestamp")]
        public unsafe partial int TimestampSubtractAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(TimestampHandle* first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(TimestampHandle* first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_multiplyAssignTimestamp")]
        public unsafe partial int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(TimestampHandle* first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(TimestampHandle* first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_divideAssignTimestamp")]
        public unsafe partial int TimestampDivideAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThan")]
        public unsafe partial int TimestampLessThan(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_lessThanOrEqualTo")]
        public unsafe partial int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThan")]
        public unsafe partial int TimestampGreaterThan(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_greaterThanOrEqualTo")]
        public unsafe partial int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_equal")]
        public unsafe partial int TimestampEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(TimestampHandle* lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(TimestampHandle* lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(TimestampHandle* lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(TimestampHandle* lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(ref TimestampHandle lhs, TimestampHandle* rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(ref TimestampHandle lhs, TimestampHandle* rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        [NativeApi(EntryPoint = "NovelRT_Timestamp_notEqual")]
        public unsafe partial int TimestampNotEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 25 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_create")]
        public unsafe partial RuntimeServiceHandle* RuntimeServiceCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_destroy")]
        public unsafe partial int RuntimeServiceDestroy(RuntimeServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_destroy")]
        public unsafe partial int RuntimeServiceDestroy(RuntimeServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_destroy")]
        public unsafe partial int RuntimeServiceDestroy(ref RuntimeServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_destroy")]
        public unsafe partial int RuntimeServiceDestroy(ref RuntimeServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_initialise")]
        public unsafe partial int RuntimeServiceInitialise(RuntimeServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_initialise")]
        public unsafe partial int RuntimeServiceInitialise(RuntimeServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_initialise")]
        public unsafe partial int RuntimeServiceInitialise(ref RuntimeServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_initialise")]
        public unsafe partial int RuntimeServiceInitialise(ref RuntimeServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_tearDown")]
        public unsafe partial int RuntimeServiceTearDown(RuntimeServiceHandle* service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_tearDown")]
        public unsafe partial int RuntimeServiceTearDown(RuntimeServiceHandle* service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_tearDown")]
        public unsafe partial int RuntimeServiceTearDown(ref RuntimeServiceHandle service, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        [NativeApi(EntryPoint = "NovelRT_RuntimeService_tearDown")]
        public unsafe partial int RuntimeServiceTearDown(ref RuntimeServiceHandle service, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 22 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_create")]
        public unsafe partial NovelRunnerHandle* NovelRunnerCreate(int displayNumber);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 22 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_createCustom")]
        public unsafe partial NovelRunnerHandle* NovelRunnerCreateCustom(int displayNumber, byte* windowTitle, uint targetFrameRate);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 22 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_createCustom")]
        public unsafe partial NovelRunnerHandle* NovelRunnerCreateCustom(int displayNumber, ref byte windowTitle, uint targetFrameRate);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 22 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_createCustom")]
        public unsafe partial NovelRunnerHandle* NovelRunnerCreateCustom(int displayNumber, string windowTitle, uint targetFrameRate);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_runNovel")]
        public unsafe partial int NovelRunnerRunNovel(NovelRunnerHandle* runner, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_runNovel")]
        public unsafe partial int NovelRunnerRunNovel(NovelRunnerHandle* runner, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_runNovel")]
        public unsafe partial int NovelRunnerRunNovel(ref NovelRunnerHandle runner, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_runNovel")]
        public unsafe partial int NovelRunnerRunNovel(ref NovelRunnerHandle runner, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_destroy")]
        public unsafe partial int NovelRunnerDestroy(NovelRunnerHandle* runner, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_destroy")]
        public unsafe partial int NovelRunnerDestroy(NovelRunnerHandle* runner, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_destroy")]
        public unsafe partial int NovelRunnerDestroy(ref NovelRunnerHandle runner, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_destroy")]
        public unsafe partial int NovelRunnerDestroy(ref NovelRunnerHandle runner, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(NovelRunnerHandle* runner, AudioServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(NovelRunnerHandle* runner, AudioServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(NovelRunnerHandle* runner, ref AudioServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(NovelRunnerHandle* runner, ref AudioServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, AudioServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, AudioServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, ref AudioServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getAudioService")]
        public unsafe partial int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, ref AudioServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, InteractionServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, InteractionServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, ref InteractionServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, ref InteractionServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, InteractionServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, InteractionServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, ref InteractionServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getInteractionService")]
        public unsafe partial int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, ref InteractionServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, WindowingServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, WindowingServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, ref WindowingServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, ref WindowingServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, WindowingServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, WindowingServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, ref WindowingServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getWindowingService")]
        public unsafe partial int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, ref WindowingServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, RuntimeServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, RuntimeServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, ref RuntimeServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, ref RuntimeServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, RuntimeServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, RuntimeServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, ref RuntimeServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRuntimeService")]
        public unsafe partial int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, ref RuntimeServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(NovelRunnerHandle* runner, RenderingServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(NovelRunnerHandle* runner, RenderingServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(NovelRunnerHandle* runner, ref RenderingServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(NovelRunnerHandle* runner, ref RenderingServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, RenderingServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, RenderingServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, ref RenderingServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getRenderer")]
        public unsafe partial int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, ref RenderingServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(NovelRunnerHandle* runner, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(NovelRunnerHandle* runner, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(NovelRunnerHandle* runner, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(NovelRunnerHandle* runner, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, DebugServiceHandle** outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, DebugServiceHandle** outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, ref DebugServiceHandle* outputService, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getDebugService")]
        public unsafe partial int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, ref DebugServiceHandle* outputService, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate(NovelRunnerHandle* runner, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate(NovelRunnerHandle* runner, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate<T0>(NovelRunnerHandle* runner, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate<T0>(NovelRunnerHandle* runner, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate(ref NovelRunnerHandle runner, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate(ref NovelRunnerHandle runner, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate<T0>(ref NovelRunnerHandle runner, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addUpdate")]
        public unsafe partial int NovelRunnerAddUpdate<T0>(ref NovelRunnerHandle runner, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested(NovelRunnerHandle* runner, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested(NovelRunnerHandle* runner, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested<T0>(NovelRunnerHandle* runner, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested<T0>(NovelRunnerHandle* runner, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested(ref NovelRunnerHandle runner, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested(ref NovelRunnerHandle runner, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested<T0>(ref NovelRunnerHandle runner, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_addSceneConstructionRequested")]
        public unsafe partial int NovelRunnerAddSceneConstructionRequested<T0>(ref NovelRunnerHandle runner, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, UtilitiesEventWithTimestampHandle** outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, UtilitiesEventWithTimestampHandle** outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, ref UtilitiesEventWithTimestampHandle* outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, ref UtilitiesEventWithTimestampHandle* outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, UtilitiesEventWithTimestampHandle** outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, UtilitiesEventWithTimestampHandle** outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, ref UtilitiesEventWithTimestampHandle* outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getUpdateEvent")]
        public unsafe partial int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, ref UtilitiesEventWithTimestampHandle* outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, UtilitiesEventHandle** outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, UtilitiesEventHandle** outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, ref UtilitiesEventHandle* outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, ref UtilitiesEventHandle* outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, UtilitiesEventHandle** outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, UtilitiesEventHandle** outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, ref UtilitiesEventHandle* outputEvent, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        [NativeApi(EntryPoint = "NovelRT_NovelRunner_getSceneConstructionEvent")]
        public unsafe partial int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, ref UtilitiesEventHandle* outputEvent, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 28 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_create")]
        public unsafe partial SpriteAnimatorFrameHandle* SpriteAnimatorFrameCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getTexture")]
        public unsafe partial int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle* texture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle* texture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle texture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle texture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle* texture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle* texture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle texture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setTexture")]
        public unsafe partial int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle texture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle** outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle** outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle* outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle* outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle** outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle** outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle* outputTimestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_getDuration")]
        public unsafe partial int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle* outputTimestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle* timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle* timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle* timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle* timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle timestamp, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_setDuration")]
        public unsafe partial int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle timestamp, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter(SpriteAnimatorFrameHandle* frame, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter(SpriteAnimatorFrameHandle* frame, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter(ref SpriteAnimatorFrameHandle frame, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter(ref SpriteAnimatorFrameHandle frame, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameEnter")]
        public unsafe partial int SpriteAnimatorFrameAddFrameEnter<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit(SpriteAnimatorFrameHandle* frame, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit(SpriteAnimatorFrameHandle* frame, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit(ref SpriteAnimatorFrameHandle frame, void* func, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit(ref SpriteAnimatorFrameHandle frame, void* func, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrame_addFrameExit")]
        public unsafe partial int SpriteAnimatorFrameAddFrameExit<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 28 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_create")]
        public unsafe partial SpriteAnimatorStateHandle* SpriteAnimatorStateCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_insertNewState")]
        public unsafe partial int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_removeStateAtIndex")]
        public unsafe partial int SpriteAnimatorStateRemoveStateAtIndex(SpriteAnimatorStateHandle* state, uint index, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_removeStateAtIndex")]
        public unsafe partial int SpriteAnimatorStateRemoveStateAtIndex(SpriteAnimatorStateHandle* state, uint index, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_removeStateAtIndex")]
        public unsafe partial int SpriteAnimatorStateRemoveStateAtIndex(ref SpriteAnimatorStateHandle state, uint index, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_removeStateAtIndex")]
        public unsafe partial int SpriteAnimatorStateRemoveStateAtIndex(ref SpriteAnimatorStateHandle state, uint index, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, int* outputLoop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, int* outputLoop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, ref int outputLoop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, ref int outputLoop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, int* outputLoop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, int* outputLoop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, ref int outputLoop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getShouldLoop")]
        public unsafe partial int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, ref int outputLoop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setShouldLoop")]
        public unsafe partial int SpriteAnimatorStateSetShouldLoop(SpriteAnimatorStateHandle* state, int loop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setShouldLoop")]
        public unsafe partial int SpriteAnimatorStateSetShouldLoop(SpriteAnimatorStateHandle* state, int loop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setShouldLoop")]
        public unsafe partial int SpriteAnimatorStateSetShouldLoop(ref SpriteAnimatorStateHandle state, int loop, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setShouldLoop")]
        public unsafe partial int SpriteAnimatorStateSetShouldLoop(ref SpriteAnimatorStateHandle state, int loop, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle** outputFramess, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle** outputFramess, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle* outputFramess, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle* outputFramess, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle** outputFramess, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle** outputFramess, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle* outputFramess, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_getFrames")]
        public unsafe partial int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle* outputFramess, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle* frames, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle* frames, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle frames, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle frames, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle* frames, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle* frames, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle frames, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_setFrames")]
        public unsafe partial int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle frames, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle** outputTransitionState, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle** outputTransitionState, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle* outputTransitionState, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle* outputTransitionState, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle** outputTransitionState, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle** outputTransitionState, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle* outputTransitionState, byte** errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorState_tryFindValidTransition")]
        public unsafe partial int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle* outputTransitionState, ref byte* errorMesssage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 34 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_create")]
        public unsafe partial SpriteAnimatorFrameVectorHandle* SpriteAnimatorFrameVectorCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, SpriteAnimatorFrameHandle* frame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, SpriteAnimatorFrameHandle* frame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, ref SpriteAnimatorFrameHandle frame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, ref SpriteAnimatorFrameHandle frame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, SpriteAnimatorFrameHandle* frame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, SpriteAnimatorFrameHandle* frame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, ref SpriteAnimatorFrameHandle frame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_addFrame")]
        public unsafe partial int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, ref SpriteAnimatorFrameHandle frame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, SpriteAnimatorFrameHandle** outputFrame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, SpriteAnimatorFrameHandle** outputFrame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, SpriteAnimatorFrameHandle** outputFrame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, SpriteAnimatorFrameHandle** outputFrame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_getFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_removeFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorRemoveFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_removeFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorRemoveFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_removeFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorRemoveFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_removeFrameAtIndex")]
        public unsafe partial int SpriteAnimatorFrameVectorRemoveFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_delete")]
        public unsafe partial int SpriteAnimatorFrameVectorDelete(SpriteAnimatorFrameVectorHandle* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_delete")]
        public unsafe partial int SpriteAnimatorFrameVectorDelete(SpriteAnimatorFrameVectorHandle* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_delete")]
        public unsafe partial int SpriteAnimatorFrameVectorDelete(ref SpriteAnimatorFrameVectorHandle vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimatorFrameVector_delete")]
        public unsafe partial int SpriteAnimatorFrameVectorDelete(ref SpriteAnimatorFrameVectorHandle vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_create")]
        public unsafe partial int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_play")]
        public unsafe partial int SpriteAnimatorPlay(SpriteAnimatorHandle* animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_play")]
        public unsafe partial int SpriteAnimatorPlay(SpriteAnimatorHandle* animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_play")]
        public unsafe partial int SpriteAnimatorPlay(ref SpriteAnimatorHandle animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_play")]
        public unsafe partial int SpriteAnimatorPlay(ref SpriteAnimatorHandle animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_pause")]
        public unsafe partial int SpriteAnimatorPause(SpriteAnimatorHandle* animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_pause")]
        public unsafe partial int SpriteAnimatorPause(SpriteAnimatorHandle* animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_pause")]
        public unsafe partial int SpriteAnimatorPause(ref SpriteAnimatorHandle animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_pause")]
        public unsafe partial int SpriteAnimatorPause(ref SpriteAnimatorHandle animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_stop")]
        public unsafe partial int SpriteAnimatorStop(SpriteAnimatorHandle* animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_stop")]
        public unsafe partial int SpriteAnimatorStop(SpriteAnimatorHandle* animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_stop")]
        public unsafe partial int SpriteAnimatorStop(ref SpriteAnimatorHandle animator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_stop")]
        public unsafe partial int SpriteAnimatorStop(ref SpriteAnimatorHandle animator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, AnimatorPlayState* outputPlayState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, AnimatorPlayState* outputPlayState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, ref AnimatorPlayState outputPlayState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, ref AnimatorPlayState outputPlayState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, AnimatorPlayState* outputPlayState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, AnimatorPlayState* outputPlayState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, ref AnimatorPlayState outputPlayState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_getCurrentPlayState")]
        public unsafe partial int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, ref AnimatorPlayState outputPlayState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, SpriteAnimatorStateHandle* state, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, SpriteAnimatorStateHandle* state, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, ref SpriteAnimatorStateHandle state, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, ref SpriteAnimatorStateHandle state, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, SpriteAnimatorStateHandle* state, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, SpriteAnimatorStateHandle* state, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, ref SpriteAnimatorStateHandle state, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        [NativeApi(EntryPoint = "NovelRT_SpriteAnimator_insertNewState")]
        public unsafe partial int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, ref SpriteAnimatorStateHandle state, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(BasicFillRectHandle* rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(BasicFillRectHandle* rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(BasicFillRectHandle* rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(BasicFillRectHandle* rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(ref BasicFillRectHandle rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(ref BasicFillRectHandle rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(ref BasicFillRectHandle rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getTransform")]
        public unsafe partial int BasicFillRectGetTransform(ref BasicFillRectHandle rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setTransform")]
        public unsafe partial int BasicFillRectSetTransform(BasicFillRectHandle* rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setTransform")]
        public unsafe partial int BasicFillRectSetTransform(BasicFillRectHandle* rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setTransform")]
        public unsafe partial int BasicFillRectSetTransform(ref BasicFillRectHandle rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setTransform")]
        public unsafe partial int BasicFillRectSetTransform(ref BasicFillRectHandle rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(BasicFillRectHandle* rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(BasicFillRectHandle* rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(BasicFillRectHandle* rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(BasicFillRectHandle* rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(ref BasicFillRectHandle rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(ref BasicFillRectHandle rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(ref BasicFillRectHandle rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getLayer")]
        public unsafe partial int BasicFillRectGetLayer(ref BasicFillRectHandle rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setLayer")]
        public unsafe partial int BasicFillRectSetLayer(BasicFillRectHandle* rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setLayer")]
        public unsafe partial int BasicFillRectSetLayer(BasicFillRectHandle* rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setLayer")]
        public unsafe partial int BasicFillRectSetLayer(ref BasicFillRectHandle rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setLayer")]
        public unsafe partial int BasicFillRectSetLayer(ref BasicFillRectHandle rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(BasicFillRectHandle* rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(BasicFillRectHandle* rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(BasicFillRectHandle* rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(BasicFillRectHandle* rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(ref BasicFillRectHandle rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(ref BasicFillRectHandle rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(ref BasicFillRectHandle rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getActive")]
        public unsafe partial int BasicFillRectGetActive(ref BasicFillRectHandle rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setActive")]
        public unsafe partial int BasicFillRectSetActive(BasicFillRectHandle* rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setActive")]
        public unsafe partial int BasicFillRectSetActive(BasicFillRectHandle* rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setActive")]
        public unsafe partial int BasicFillRectSetActive(ref BasicFillRectHandle rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setActive")]
        public unsafe partial int BasicFillRectSetActive(ref BasicFillRectHandle rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_executeObjectBehaviour")]
        public unsafe partial int BasicFillRectExecuteObjectBehaviour(BasicFillRectHandle* rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_executeObjectBehaviour")]
        public unsafe partial int BasicFillRectExecuteObjectBehaviour(BasicFillRectHandle* rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_executeObjectBehaviour")]
        public unsafe partial int BasicFillRectExecuteObjectBehaviour(ref BasicFillRectHandle rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_executeObjectBehaviour")]
        public unsafe partial int BasicFillRectExecuteObjectBehaviour(ref BasicFillRectHandle rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle** outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle** outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle** outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle** outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle* outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getColourConfig")]
        public unsafe partial int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle* outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle* inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle* inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle* inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle* inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_setColourConfig")]
        public unsafe partial int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        [NativeApi(EntryPoint = "NovelRT_BasicFillRect_getAsRenderObjectPtr")]
        public unsafe partial int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_createFromGeoVector2F")]
        public partial GeoVector3F GeoVector3FCreateFromGeoVector2F(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_isNaN")]
        public partial int GeoVector3FIsNaN(GeoVector3F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_uniform")]
        public partial GeoVector3F GeoVector3FUniform(float value);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_zero")]
        public partial GeoVector3F GeoVector3FZero();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_one")]
        public partial GeoVector3F GeoVector3FOne();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector3FRotateToAngleAroundPoint(GeoVector3F* vector, float angleRotationValue, GeoVector3F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector3FRotateToAngleAroundPoint(GeoVector3F* vector, float angleRotationValue, GeoVector3F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector3FRotateToAngleAroundPoint(ref GeoVector3F vector, float angleRotationValue, GeoVector3F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector3FRotateToAngleAroundPoint(ref GeoVector3F vector, float angleRotationValue, GeoVector3F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_epsilonEquals")]
        public partial int GeoVector3FEpsilonEquals(GeoVector3F vector, GeoVector3F other, GeoVector3F epsilonValue);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_getNormalised")]
        public partial GeoVector3F GeoVector3FGetNormalised(GeoVector3F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_getLength")]
        public partial float GeoVector3FGetLength(GeoVector3F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_getMagnitude")]
        public partial float GeoVector3FGetMagnitude(GeoVector3F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_equal")]
        public partial int GeoVector3FEqual(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_notEqual")]
        public partial int GeoVector3FNotEqual(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_lessThan")]
        public partial int GeoVector3FLessThan(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_lessThanOrEqualTo")]
        public partial int GeoVector3FLessThanOrEqualTo(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_greaterThan")]
        public partial int GeoVector3FGreaterThan(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_greaterThanOrEqualTo")]
        public partial int GeoVector3FGreaterThanOrEqualTo(GeoVector3F lhs, GeoVector3F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addVector")]
        public unsafe partial int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addVector")]
        public unsafe partial int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addVector")]
        public unsafe partial int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addVector")]
        public unsafe partial int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractVector")]
        public unsafe partial int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractVector")]
        public unsafe partial int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractVector")]
        public unsafe partial int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractVector")]
        public unsafe partial int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyVector")]
        public unsafe partial int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyVector")]
        public unsafe partial int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyVector")]
        public unsafe partial int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyVector")]
        public unsafe partial int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideVector")]
        public unsafe partial int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideVector")]
        public unsafe partial int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideVector")]
        public unsafe partial int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideVector")]
        public unsafe partial int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addFloat")]
        public unsafe partial int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addFloat")]
        public unsafe partial int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addFloat")]
        public unsafe partial int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addFloat")]
        public unsafe partial int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractFloat")]
        public unsafe partial int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractFloat")]
        public unsafe partial int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractFloat")]
        public unsafe partial int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractFloat")]
        public unsafe partial int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyFloat")]
        public unsafe partial int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyFloat")]
        public unsafe partial int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyFloat")]
        public unsafe partial int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyFloat")]
        public unsafe partial int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideFloat")]
        public unsafe partial int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideFloat")]
        public unsafe partial int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideFloat")]
        public unsafe partial int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideFloat")]
        public unsafe partial int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignVector")]
        public unsafe partial int GeoVector3FAddAssignVector(GeoVector3F* lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignVector")]
        public unsafe partial int GeoVector3FAddAssignVector(GeoVector3F* lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignVector")]
        public unsafe partial int GeoVector3FAddAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignVector")]
        public unsafe partial int GeoVector3FAddAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignVector")]
        public unsafe partial int GeoVector3FSubtractAssignVector(GeoVector3F* lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignVector")]
        public unsafe partial int GeoVector3FSubtractAssignVector(GeoVector3F* lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignVector")]
        public unsafe partial int GeoVector3FSubtractAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignVector")]
        public unsafe partial int GeoVector3FSubtractAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignVector")]
        public unsafe partial int GeoVector3FMultiplyAssignVector(GeoVector3F* lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignVector")]
        public unsafe partial int GeoVector3FMultiplyAssignVector(GeoVector3F* lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignVector")]
        public unsafe partial int GeoVector3FMultiplyAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignVector")]
        public unsafe partial int GeoVector3FMultiplyAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignVector")]
        public unsafe partial int GeoVector3FDivideAssignVector(GeoVector3F* lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignVector")]
        public unsafe partial int GeoVector3FDivideAssignVector(GeoVector3F* lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignVector")]
        public unsafe partial int GeoVector3FDivideAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignVector")]
        public unsafe partial int GeoVector3FDivideAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignFloat")]
        public unsafe partial int GeoVector3FAddAssignFloat(GeoVector3F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignFloat")]
        public unsafe partial int GeoVector3FAddAssignFloat(GeoVector3F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignFloat")]
        public unsafe partial int GeoVector3FAddAssignFloat(ref GeoVector3F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_addAssignFloat")]
        public unsafe partial int GeoVector3FAddAssignFloat(ref GeoVector3F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignFloat")]
        public unsafe partial int GeoVector3FSubtractAssignFloat(GeoVector3F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignFloat")]
        public unsafe partial int GeoVector3FSubtractAssignFloat(GeoVector3F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignFloat")]
        public unsafe partial int GeoVector3FSubtractAssignFloat(ref GeoVector3F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_subtractAssignFloat")]
        public unsafe partial int GeoVector3FSubtractAssignFloat(ref GeoVector3F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignFloat")]
        public unsafe partial int GeoVector3FMultiplyAssignFloat(GeoVector3F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignFloat")]
        public unsafe partial int GeoVector3FMultiplyAssignFloat(GeoVector3F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignFloat")]
        public unsafe partial int GeoVector3FMultiplyAssignFloat(ref GeoVector3F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_multiplyAssignFloat")]
        public unsafe partial int GeoVector3FMultiplyAssignFloat(ref GeoVector3F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignFloat")]
        public unsafe partial int GeoVector3FDivideAssignFloat(GeoVector3F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignFloat")]
        public unsafe partial int GeoVector3FDivideAssignFloat(GeoVector3F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignFloat")]
        public unsafe partial int GeoVector3FDivideAssignFloat(ref GeoVector3F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector3F_divideAssignFloat")]
        public unsafe partial int GeoVector3FDivideAssignFloat(ref GeoVector3F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_createFromGeoVector2F")]
        public partial GeoVector4F GeoVector4FCreateFromGeoVector2F(GeoVector2F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_createFromGeoVector3F")]
        public partial GeoVector4F GeoVector4FCreateFromGeoVector3F(GeoVector3F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_isNaN")]
        public partial int GeoVector4FIsNaN(GeoVector4F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_uniform")]
        public partial GeoVector4F GeoVector4FUniform(float value);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_zero")]
        public partial GeoVector4F GeoVector4FZero();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_one")]
        public partial GeoVector4F GeoVector4FOne();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector4FRotateToAngleAroundPoint(GeoVector4F* vector, float angleRotationValue, GeoVector3F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector4FRotateToAngleAroundPoint(GeoVector4F* vector, float angleRotationValue, GeoVector3F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector4FRotateToAngleAroundPoint(ref GeoVector4F vector, float angleRotationValue, GeoVector3F point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_rotateToAngleAroundPoint")]
        public unsafe partial int GeoVector4FRotateToAngleAroundPoint(ref GeoVector4F vector, float angleRotationValue, GeoVector3F point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_epsilonEquals")]
        public partial int GeoVector4FEpsilonEquals(GeoVector4F vector, GeoVector4F other, GeoVector4F epsilonValue);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 22 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_getNormalised")]
        public partial GeoVector4F GeoVector4FGetNormalised(GeoVector4F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_getLength")]
        public partial float GeoVector4FGetLength(GeoVector4F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_getMagnitude")]
        public partial float GeoVector4FGetMagnitude(GeoVector4F vector);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_equal")]
        public partial int GeoVector4FEqual(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_notEqual")]
        public partial int GeoVector4FNotEqual(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_lessThan")]
        public partial int GeoVector4FLessThan(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_lessThanOrEqualTo")]
        public partial int GeoVector4FLessThanOrEqualTo(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_greaterThan")]
        public partial int GeoVector4FGreaterThan(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_greaterThanOrEqualTo")]
        public partial int GeoVector4FGreaterThanOrEqualTo(GeoVector4F lhs, GeoVector4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addVector")]
        public unsafe partial int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addVector")]
        public unsafe partial int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addVector")]
        public unsafe partial int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addVector")]
        public unsafe partial int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractVector")]
        public unsafe partial int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractVector")]
        public unsafe partial int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractVector")]
        public unsafe partial int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractVector")]
        public unsafe partial int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyVector")]
        public unsafe partial int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyVector")]
        public unsafe partial int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyVector")]
        public unsafe partial int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyVector")]
        public unsafe partial int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideVector")]
        public unsafe partial int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideVector")]
        public unsafe partial int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideVector")]
        public unsafe partial int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideVector")]
        public unsafe partial int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addFloat")]
        public unsafe partial int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addFloat")]
        public unsafe partial int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addFloat")]
        public unsafe partial int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addFloat")]
        public unsafe partial int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractFloat")]
        public unsafe partial int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractFloat")]
        public unsafe partial int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractFloat")]
        public unsafe partial int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractFloat")]
        public unsafe partial int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyFloat")]
        public unsafe partial int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyFloat")]
        public unsafe partial int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyFloat")]
        public unsafe partial int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyFloat")]
        public unsafe partial int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideFloat")]
        public unsafe partial int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideFloat")]
        public unsafe partial int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideFloat")]
        public unsafe partial int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideFloat")]
        public unsafe partial int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignVector")]
        public unsafe partial int GeoVector4FAddAssignVector(GeoVector4F* lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignVector")]
        public unsafe partial int GeoVector4FAddAssignVector(GeoVector4F* lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignVector")]
        public unsafe partial int GeoVector4FAddAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignVector")]
        public unsafe partial int GeoVector4FAddAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignVector")]
        public unsafe partial int GeoVector4FSubtractAssignVector(GeoVector4F* lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignVector")]
        public unsafe partial int GeoVector4FSubtractAssignVector(GeoVector4F* lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignVector")]
        public unsafe partial int GeoVector4FSubtractAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignVector")]
        public unsafe partial int GeoVector4FSubtractAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignVector")]
        public unsafe partial int GeoVector4FMultiplyAssignVector(GeoVector4F* lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignVector")]
        public unsafe partial int GeoVector4FMultiplyAssignVector(GeoVector4F* lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignVector")]
        public unsafe partial int GeoVector4FMultiplyAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignVector")]
        public unsafe partial int GeoVector4FMultiplyAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignVector")]
        public unsafe partial int GeoVector4FDivideAssignVector(GeoVector4F* lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignVector")]
        public unsafe partial int GeoVector4FDivideAssignVector(GeoVector4F* lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignVector")]
        public unsafe partial int GeoVector4FDivideAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignVector")]
        public unsafe partial int GeoVector4FDivideAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignFloat")]
        public unsafe partial int GeoVector4FAddAssignFloat(GeoVector4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignFloat")]
        public unsafe partial int GeoVector4FAddAssignFloat(GeoVector4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignFloat")]
        public unsafe partial int GeoVector4FAddAssignFloat(ref GeoVector4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_addAssignFloat")]
        public unsafe partial int GeoVector4FAddAssignFloat(ref GeoVector4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignFloat")]
        public unsafe partial int GeoVector4FSubtractAssignFloat(GeoVector4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignFloat")]
        public unsafe partial int GeoVector4FSubtractAssignFloat(GeoVector4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignFloat")]
        public unsafe partial int GeoVector4FSubtractAssignFloat(ref GeoVector4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_subtractAssignFloat")]
        public unsafe partial int GeoVector4FSubtractAssignFloat(ref GeoVector4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignFloat")]
        public unsafe partial int GeoVector4FMultiplyAssignFloat(GeoVector4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignFloat")]
        public unsafe partial int GeoVector4FMultiplyAssignFloat(GeoVector4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignFloat")]
        public unsafe partial int GeoVector4FMultiplyAssignFloat(ref GeoVector4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_multiplyAssignFloat")]
        public unsafe partial int GeoVector4FMultiplyAssignFloat(ref GeoVector4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignFloat")]
        public unsafe partial int GeoVector4FDivideAssignFloat(GeoVector4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignFloat")]
        public unsafe partial int GeoVector4FDivideAssignFloat(GeoVector4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignFloat")]
        public unsafe partial int GeoVector4FDivideAssignFloat(ref GeoVector4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoVector4F_divideAssignFloat")]
        public unsafe partial int GeoVector4FDivideAssignFloat(ref GeoVector4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_isNaN")]
        public partial int GeoMatrix4x4FIsNaN(GeoMatrix4x4F matrix);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 24 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_getDefaultIdentity")]
        public partial GeoMatrix4x4F GeoMatrix4x4FGetDefaultIdentity();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_equal")]
        public partial int GeoMatrix4x4FEqual(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_notEqual")]
        public partial int GeoMatrix4x4FNotEqual(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addMatrix")]
        public unsafe partial int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addMatrix")]
        public unsafe partial int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addMatrix")]
        public unsafe partial int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addMatrix")]
        public unsafe partial int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FAddAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FAddAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FAddAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FAddAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignMatrix")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addFloat")]
        public unsafe partial int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addFloat")]
        public unsafe partial int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addFloat")]
        public unsafe partial int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addFloat")]
        public unsafe partial int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignFloat")]
        public unsafe partial int GeoMatrix4x4FAddAssignFloat(GeoMatrix4x4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignFloat")]
        public unsafe partial int GeoMatrix4x4FAddAssignFloat(GeoMatrix4x4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignFloat")]
        public unsafe partial int GeoMatrix4x4FAddAssignFloat(ref GeoMatrix4x4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_addAssignFloat")]
        public unsafe partial int GeoMatrix4x4FAddAssignFloat(ref GeoMatrix4x4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignFloat(GeoMatrix4x4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignFloat(GeoMatrix4x4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignFloat(ref GeoMatrix4x4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_subtractAssignFloat")]
        public unsafe partial int GeoMatrix4x4FSubtractAssignFloat(ref GeoMatrix4x4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignFloat(GeoMatrix4x4F* lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignFloat(GeoMatrix4x4F* lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignFloat(ref GeoMatrix4x4F lhs, float rhs, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        [NativeApi(EntryPoint = "NovelRT_GeoMatrix4x4F_multiplyAssignFloat")]
        public unsafe partial int GeoMatrix4x4FMultiplyAssignFloat(ref GeoMatrix4x4F lhs, float rhs, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 17 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_create")]
        public unsafe partial CameraHandle* CameraCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getViewMatrix")]
        public unsafe partial int CameraGetViewMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setViewMatrix")]
        public unsafe partial int CameraSetViewMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setViewMatrix")]
        public unsafe partial int CameraSetViewMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setViewMatrix")]
        public unsafe partial int CameraSetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setViewMatrix")]
        public unsafe partial int CameraSetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getProjectionMatrix")]
        public unsafe partial int CameraGetProjectionMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setProjectionMatrix")]
        public unsafe partial int CameraSetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setProjectionMatrix")]
        public unsafe partial int CameraSetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setProjectionMatrix")]
        public unsafe partial int CameraSetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setProjectionMatrix")]
        public unsafe partial int CameraSetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getCameraUboMatrix")]
        public unsafe partial int CameraGetCameraUboMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(CameraHandle* camera, CameraFrameState* outputFrameState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(CameraHandle* camera, CameraFrameState* outputFrameState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(CameraHandle* camera, ref CameraFrameState outputFrameState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(CameraHandle* camera, ref CameraFrameState outputFrameState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(ref CameraHandle camera, CameraFrameState* outputFrameState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(ref CameraHandle camera, CameraFrameState* outputFrameState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(ref CameraHandle camera, ref CameraFrameState outputFrameState, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_getFrameState")]
        public unsafe partial int CameraGetFrameState(ref CameraHandle camera, ref CameraFrameState outputFrameState, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback(CameraHandle* camera, void* callback, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback(CameraHandle* camera, void* callback, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback<T0>(CameraHandle* camera, ref T0 callback, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback<T0>(CameraHandle* camera, ref T0 callback, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback(ref CameraHandle camera, void* callback, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback(ref CameraHandle camera, void* callback, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback<T0>(ref CameraHandle camera, ref T0 callback, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_setForceResizeCallback")]
        public unsafe partial int CameraSetForceResizeCallback<T0>(ref CameraHandle camera, ref T0 callback, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 17 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_createDefaultOrthographicProjection")]
        public unsafe partial CameraHandle* CameraCreateDefaultOrthographicProjection(GeoVector2F windowSize);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 17 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_createDefaultPerspectiveProjection")]
        public unsafe partial CameraHandle* CameraCreateDefaultPerspectiveProjection(GeoVector2F windowSize);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_destroy")]
        public unsafe partial int CameraDestroy(CameraHandle* camera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_destroy")]
        public unsafe partial int CameraDestroy(CameraHandle* camera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_destroy")]
        public unsafe partial int CameraDestroy(ref CameraHandle camera, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        [NativeApi(EntryPoint = "NovelRT_Camera_destroy")]
        public unsafe partial int CameraDestroy(ref CameraHandle camera, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, byte* file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, byte* file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, ref byte file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, ref byte file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, string file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, string file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, byte* file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, byte* file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, ref byte file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, ref byte file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, string file, float fontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_loadFontAsTextureSet")]
        public unsafe partial int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, string file, float fontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(FontSetHandle* fontSet, byte** outputFontFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(FontSetHandle* fontSet, byte** outputFontFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(FontSetHandle* fontSet, ref byte* outputFontFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(FontSetHandle* fontSet, ref byte* outputFontFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(ref FontSetHandle fontSet, byte** outputFontFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(ref FontSetHandle fontSet, byte** outputFontFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(ref FontSetHandle fontSet, ref byte* outputFontFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontFile")]
        public unsafe partial int FontSetGetFontFile(ref FontSetHandle fontSet, ref byte* outputFontFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(FontSetHandle* fontSet, float* outputFontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(FontSetHandle* fontSet, float* outputFontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(FontSetHandle* fontSet, ref float outputFontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(FontSetHandle* fontSet, ref float outputFontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(ref FontSetHandle fontSet, float* outputFontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(ref FontSetHandle fontSet, float* outputFontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(ref FontSetHandle fontSet, ref float outputFontSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        [NativeApi(EntryPoint = "NovelRT_FontSet_getFontSize")]
        public unsafe partial int FontSetGetFontSize(ref FontSetHandle fontSet, ref float outputFontSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ImageRectHandle* rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ImageRectHandle* rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ImageRectHandle* rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ImageRectHandle* rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ref ImageRectHandle rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ref ImageRectHandle rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ref ImageRectHandle rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTransform")]
        public unsafe partial int ImageRectGetTransform(ref ImageRectHandle rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTransform")]
        public unsafe partial int ImageRectSetTransform(ImageRectHandle* rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTransform")]
        public unsafe partial int ImageRectSetTransform(ImageRectHandle* rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTransform")]
        public unsafe partial int ImageRectSetTransform(ref ImageRectHandle rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTransform")]
        public unsafe partial int ImageRectSetTransform(ref ImageRectHandle rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ImageRectHandle* rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ImageRectHandle* rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ImageRectHandle* rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ImageRectHandle* rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ref ImageRectHandle rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ref ImageRectHandle rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ref ImageRectHandle rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getLayer")]
        public unsafe partial int ImageRectGetLayer(ref ImageRectHandle rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setLayer")]
        public unsafe partial int ImageRectSetLayer(ImageRectHandle* rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setLayer")]
        public unsafe partial int ImageRectSetLayer(ImageRectHandle* rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setLayer")]
        public unsafe partial int ImageRectSetLayer(ref ImageRectHandle rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setLayer")]
        public unsafe partial int ImageRectSetLayer(ref ImageRectHandle rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ImageRectHandle* rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ImageRectHandle* rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ImageRectHandle* rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ImageRectHandle* rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ref ImageRectHandle rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ref ImageRectHandle rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ref ImageRectHandle rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getActive")]
        public unsafe partial int ImageRectGetActive(ref ImageRectHandle rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setActive")]
        public unsafe partial int ImageRectSetActive(ImageRectHandle* rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setActive")]
        public unsafe partial int ImageRectSetActive(ImageRectHandle* rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setActive")]
        public unsafe partial int ImageRectSetActive(ref ImageRectHandle rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setActive")]
        public unsafe partial int ImageRectSetActive(ref ImageRectHandle rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_executeObjectBehaviour")]
        public unsafe partial int ImageRectExecuteObjectBehaviour(ImageRectHandle* rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_executeObjectBehaviour")]
        public unsafe partial int ImageRectExecuteObjectBehaviour(ImageRectHandle* rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_executeObjectBehaviour")]
        public unsafe partial int ImageRectExecuteObjectBehaviour(ref ImageRectHandle rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_executeObjectBehaviour")]
        public unsafe partial int ImageRectExecuteObjectBehaviour(ref ImageRectHandle rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ImageRectHandle* rect, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ImageRectHandle* rect, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ImageRectHandle* rect, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ImageRectHandle* rect, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ref ImageRectHandle rect, TextureHandle** outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ref ImageRectHandle rect, TextureHandle** outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ref ImageRectHandle rect, ref TextureHandle* outputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getTexture")]
        public unsafe partial int ImageRectGetTexture(ref ImageRectHandle rect, ref TextureHandle* outputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ImageRectHandle* rect, TextureHandle* inputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ImageRectHandle* rect, TextureHandle* inputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ImageRectHandle* rect, ref TextureHandle inputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ImageRectHandle* rect, ref TextureHandle inputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ref ImageRectHandle rect, TextureHandle* inputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ref ImageRectHandle rect, TextureHandle* inputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ref ImageRectHandle rect, ref TextureHandle inputTexture, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setTexture")]
        public unsafe partial int ImageRectSetTexture(ref ImageRectHandle rect, ref TextureHandle inputTexture, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ImageRectHandle* rect, RGBAConfigHandle** outputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ImageRectHandle* rect, RGBAConfigHandle** outputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle* outputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle* outputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ref ImageRectHandle rect, RGBAConfigHandle** outputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ref ImageRectHandle rect, RGBAConfigHandle** outputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle* outputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getColourTint")]
        public unsafe partial int ImageRectGetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle* outputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ImageRectHandle* rect, RGBAConfigHandle* inputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ImageRectHandle* rect, RGBAConfigHandle* inputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle inputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle inputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ref ImageRectHandle rect, RGBAConfigHandle* inputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ref ImageRectHandle rect, RGBAConfigHandle* inputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle inputColourTint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_setColourTint")]
        public unsafe partial int ImageRectSetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle inputColourTint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        [NativeApi(EntryPoint = "NovelRT_ImageRect_getAsRenderObjectPtr")]
        public unsafe partial int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(TextRectHandle* rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(TextRectHandle* rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(TextRectHandle* rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(TextRectHandle* rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(ref TextRectHandle rect, Transform* outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(ref TextRectHandle rect, Transform* outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(ref TextRectHandle rect, ref Transform outputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getTransform")]
        public unsafe partial int TextRectGetTransform(ref TextRectHandle rect, ref Transform outputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setTransform")]
        public unsafe partial int TextRectSetTransform(TextRectHandle* rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setTransform")]
        public unsafe partial int TextRectSetTransform(TextRectHandle* rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setTransform")]
        public unsafe partial int TextRectSetTransform(ref TextRectHandle rect, Transform inputTransform, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setTransform")]
        public unsafe partial int TextRectSetTransform(ref TextRectHandle rect, Transform inputTransform, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(TextRectHandle* rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(TextRectHandle* rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(TextRectHandle* rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(TextRectHandle* rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(ref TextRectHandle rect, int* outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(ref TextRectHandle rect, int* outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(ref TextRectHandle rect, ref int outputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getLayer")]
        public unsafe partial int TextRectGetLayer(ref TextRectHandle rect, ref int outputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setLayer")]
        public unsafe partial int TextRectSetLayer(TextRectHandle* rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setLayer")]
        public unsafe partial int TextRectSetLayer(TextRectHandle* rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setLayer")]
        public unsafe partial int TextRectSetLayer(ref TextRectHandle rect, int inputLayer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setLayer")]
        public unsafe partial int TextRectSetLayer(ref TextRectHandle rect, int inputLayer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(TextRectHandle* rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(TextRectHandle* rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(TextRectHandle* rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(TextRectHandle* rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(ref TextRectHandle rect, int* outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(ref TextRectHandle rect, int* outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(ref TextRectHandle rect, ref int outputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getActive")]
        public unsafe partial int TextRectGetActive(ref TextRectHandle rect, ref int outputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setActive")]
        public unsafe partial int TextRectSetActive(TextRectHandle* rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setActive")]
        public unsafe partial int TextRectSetActive(TextRectHandle* rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setActive")]
        public unsafe partial int TextRectSetActive(ref TextRectHandle rect, int inputBool, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setActive")]
        public unsafe partial int TextRectSetActive(ref TextRectHandle rect, int inputBool, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_executeObjectBehaviour")]
        public unsafe partial int TextRectExecuteObjectBehaviour(TextRectHandle* rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_executeObjectBehaviour")]
        public unsafe partial int TextRectExecuteObjectBehaviour(TextRectHandle* rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_executeObjectBehaviour")]
        public unsafe partial int TextRectExecuteObjectBehaviour(ref TextRectHandle rect, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_executeObjectBehaviour")]
        public unsafe partial int TextRectExecuteObjectBehaviour(ref TextRectHandle rect, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(TextRectHandle* rect, RGBAConfigHandle** outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(TextRectHandle* rect, RGBAConfigHandle** outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(ref TextRectHandle rect, RGBAConfigHandle** outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(ref TextRectHandle rect, RGBAConfigHandle** outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle* outputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getColourConfig")]
        public unsafe partial int TextRectGetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle* outputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(TextRectHandle* rect, RGBAConfigHandle* inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(TextRectHandle* rect, RGBAConfigHandle* inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(ref TextRectHandle rect, RGBAConfigHandle* inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(ref TextRectHandle rect, RGBAConfigHandle* inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle inputColourConfig, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setColourConfig")]
        public unsafe partial int TextRectSetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle inputColourConfig, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(TextRectHandle* rect, byte** outputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(TextRectHandle* rect, byte** outputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(TextRectHandle* rect, ref byte* outputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(TextRectHandle* rect, ref byte* outputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(ref TextRectHandle rect, byte** outputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(ref TextRectHandle rect, byte** outputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(ref TextRectHandle rect, ref byte* outputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getText")]
        public unsafe partial int TextRectGetText(ref TextRectHandle rect, ref byte* outputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, byte* inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, byte* inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, ref byte inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, ref byte inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, string inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(TextRectHandle* rect, string inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, byte* inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, byte* inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, ref byte inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, ref byte inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, string inputText, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setText")]
        public unsafe partial int TextRectSetText(ref TextRectHandle rect, string inputText, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(TextRectHandle* rect, FontSetHandle** outputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(TextRectHandle* rect, FontSetHandle** outputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(TextRectHandle* rect, ref FontSetHandle* outputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(TextRectHandle* rect, ref FontSetHandle* outputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(ref TextRectHandle rect, FontSetHandle** outputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(ref TextRectHandle rect, FontSetHandle** outputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(ref TextRectHandle rect, ref FontSetHandle* outputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getFontSet")]
        public unsafe partial int TextRectGetFontSet(ref TextRectHandle rect, ref FontSetHandle* outputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(TextRectHandle* rect, FontSetHandle* inputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(TextRectHandle* rect, FontSetHandle* inputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(TextRectHandle* rect, ref FontSetHandle inputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(TextRectHandle* rect, ref FontSetHandle inputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(ref TextRectHandle rect, FontSetHandle* inputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(ref TextRectHandle rect, FontSetHandle* inputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(ref TextRectHandle rect, ref FontSetHandle inputFontSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_setFontSet")]
        public unsafe partial int TextRectSetFontSet(ref TextRectHandle rect, ref FontSetHandle inputFontSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, RenderObjectHandle** outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, RenderObjectHandle** outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, ref RenderObjectHandle* outputRenderObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        [NativeApi(EntryPoint = "NovelRT_TextRect_getAsRenderObjectPtr")]
        public unsafe partial int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, ref RenderObjectHandle* outputRenderObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, byte* file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, byte* file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, ref byte file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, ref byte file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, string file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(TextureHandle* targetTexture, string file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, byte* file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, byte* file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, ref byte file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, ref byte file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, string file, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_loadPngAsTexture")]
        public unsafe partial int TextureLoadPngAsTexture(ref TextureHandle targetTexture, string file, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(TextureHandle* targetTexture, byte** outputFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(TextureHandle* targetTexture, byte** outputFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(TextureHandle* targetTexture, ref byte* outputFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(TextureHandle* targetTexture, ref byte* outputFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(ref TextureHandle targetTexture, byte** outputFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(ref TextureHandle targetTexture, byte** outputFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(ref TextureHandle targetTexture, ref byte* outputFile, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getTextureFile")]
        public unsafe partial int TextureGetTextureFile(ref TextureHandle targetTexture, ref byte* outputFile, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(TextureHandle* targetTexture, GeoVector2F* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(TextureHandle* targetTexture, GeoVector2F* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(TextureHandle* targetTexture, ref GeoVector2F outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(TextureHandle* targetTexture, ref GeoVector2F outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(ref TextureHandle targetTexture, GeoVector2F* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(ref TextureHandle targetTexture, GeoVector2F* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(ref TextureHandle targetTexture, ref GeoVector2F outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        [NativeApi(EntryPoint = "NovelRT_Texture_getSize")]
        public unsafe partial int TextureGetSize(ref TextureHandle targetTexture, ref GeoVector2F outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 24 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_create")]
        public unsafe partial QuadtreePoint* QuadTreePointCreate(GeoVector2F position);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 24 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_createFromFloat")]
        public unsafe partial QuadtreePoint* QuadTreePointCreateFromFloat(float x, float y);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(QuadtreePoint* point, GeoVector2F* outputPosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(QuadtreePoint* point, GeoVector2F* outputPosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(QuadtreePoint* point, ref GeoVector2F outputPosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(QuadtreePoint* point, ref GeoVector2F outputPosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(ref QuadtreePoint point, GeoVector2F* outputPosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(ref QuadtreePoint point, GeoVector2F* outputPosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(ref QuadtreePoint point, ref GeoVector2F outputPosition, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_getPosition")]
        public unsafe partial int QuadTreePointGetPosition(ref QuadtreePoint point, ref GeoVector2F outputPosition, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_delete")]
        public unsafe partial int QuadTreePointDelete(QuadtreePoint* point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_delete")]
        public unsafe partial int QuadTreePointDelete(QuadtreePoint* point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_delete")]
        public unsafe partial int QuadTreePointDelete(ref QuadtreePoint point, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreePoint_delete")]
        public unsafe partial int QuadTreePointDelete(ref QuadtreePoint point, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 19 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_create")]
        public unsafe partial QuadTreeHandle* QuadTreeCreate(GeoBounds bounds);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(QuadTreeHandle* tree, QuadTreeHandle** outputParentTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(QuadTreeHandle* tree, QuadTreeHandle** outputParentTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(QuadTreeHandle* tree, ref QuadTreeHandle* outputParentTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(QuadTreeHandle* tree, ref QuadTreeHandle* outputParentTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(ref QuadTreeHandle tree, QuadTreeHandle** outputParentTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(ref QuadTreeHandle tree, QuadTreeHandle** outputParentTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(ref QuadTreeHandle tree, ref QuadTreeHandle* outputParentTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getParent")]
        public unsafe partial int QuadTreeGetParent(ref QuadTreeHandle tree, ref QuadTreeHandle* outputParentTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(QuadTreeHandle* tree, GeoBounds* outputGeoBounds, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(QuadTreeHandle* tree, GeoBounds* outputGeoBounds, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(QuadTreeHandle* tree, ref GeoBounds outputGeoBounds, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(QuadTreeHandle* tree, ref GeoBounds outputGeoBounds, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(ref QuadTreeHandle tree, GeoBounds* outputGeoBounds, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(ref QuadTreeHandle tree, GeoBounds* outputGeoBounds, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(ref QuadTreeHandle tree, ref GeoBounds outputGeoBounds, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBounds")]
        public unsafe partial int QuadTreeGetBounds(ref QuadTreeHandle tree, ref GeoBounds outputGeoBounds, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, QuadtreePoint** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, QuadtreePoint** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, ref QuadtreePoint* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, ref QuadtreePoint* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, QuadtreePoint** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, QuadtreePoint** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, ref QuadtreePoint* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPoint")]
        public unsafe partial int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, ref QuadtreePoint* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(QuadTreeHandle* tree, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(QuadTreeHandle* tree, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(QuadTreeHandle* tree, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(QuadTreeHandle* tree, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(ref QuadTreeHandle tree, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(ref QuadTreeHandle tree, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(ref QuadTreeHandle tree, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getPointCount")]
        public unsafe partial int QuadTreeGetPointCount(ref QuadTreeHandle tree, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopLeft")]
        public unsafe partial int QuadTreeGetTopLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getTopRight")]
        public unsafe partial int QuadTreeGetTopRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomLeft")]
        public unsafe partial int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getBottomRight")]
        public unsafe partial int QuadTreeGetBottomRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryInsert")]
        public unsafe partial int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_tryRemove")]
        public unsafe partial int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_getIntersectingPoints")]
        public unsafe partial int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_delete")]
        public unsafe partial int PointVectorDelete(StdVectorQuadTreePoint* vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_delete")]
        public unsafe partial int PointVectorDelete(StdVectorQuadTreePoint* vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_delete")]
        public unsafe partial int PointVectorDelete(ref StdVectorQuadTreePoint vector, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_delete")]
        public unsafe partial int PointVectorDelete(ref StdVectorQuadTreePoint vector, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(StdVectorQuadTreePoint* vector, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(StdVectorQuadTreePoint* vector, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(StdVectorQuadTreePoint* vector, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(StdVectorQuadTreePoint* vector, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(ref StdVectorQuadTreePoint vector, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(ref StdVectorQuadTreePoint vector, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(ref StdVectorQuadTreePoint vector, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getSize")]
        public unsafe partial int PointVectorGetSize(ref StdVectorQuadTreePoint vector, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, QuadtreePoint** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, QuadtreePoint** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, ref QuadtreePoint* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, ref QuadtreePoint* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, QuadtreePoint** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, QuadtreePoint** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, ref QuadtreePoint* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_PointVector_getPointFromIndex")]
        public unsafe partial int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, ref QuadtreePoint* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_delete")]
        public unsafe partial int QuadTreeDelete(QuadTreeHandle* tree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_delete")]
        public unsafe partial int QuadTreeDelete(QuadTreeHandle* tree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_delete")]
        public unsafe partial int QuadTreeDelete(ref QuadTreeHandle tree, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTree_delete")]
        public unsafe partial int QuadTreeDelete(ref QuadTreeHandle tree, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(QuadTreeScenePointArray* points, QuadTreeNodeHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(QuadTreeScenePointArray* points, QuadTreeNodeHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(QuadTreeScenePointArray* points, ref QuadTreeNodeHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(QuadTreeScenePointArray* points, ref QuadTreeNodeHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, QuadTreeNodeHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, QuadTreeNodeHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, ref QuadTreeNodeHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_create")]
        public unsafe partial int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, ref QuadTreeNodeHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopLeft")]
        public unsafe partial int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getTopRight")]
        public unsafe partial int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomLeft")]
        public unsafe partial int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeNode_getBottomRight")]
        public unsafe partial int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePointArray_create")]
        public unsafe partial int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createVector")]
        public unsafe partial int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_createFloat")]
        public unsafe partial int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, SceneNodeHandle** outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, SceneNodeHandle** outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, ref SceneNodeHandle* outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, ref SceneNodeHandle* outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, SceneNodeHandle** outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, SceneNodeHandle** outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, ref SceneNodeHandle* outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        [NativeApi(EntryPoint = "NovelRT_QuadTreeScenePoint_getSceneNode")]
        public unsafe partial int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, ref SceneNodeHandle* outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(RenderObjectHandle* @object, RenderObjectNodeHandle** outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(RenderObjectHandle* @object, RenderObjectNodeHandle** outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(RenderObjectHandle* @object, ref RenderObjectNodeHandle* outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(RenderObjectHandle* @object, ref RenderObjectNodeHandle* outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(ref RenderObjectHandle @object, RenderObjectNodeHandle** outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(ref RenderObjectHandle @object, RenderObjectNodeHandle** outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(ref RenderObjectHandle @object, ref RenderObjectNodeHandle* outputNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_create")]
        public unsafe partial int RenderObjectNodeCreate(ref RenderObjectHandle @object, ref RenderObjectNodeHandle* outputNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, RenderObjectHandle** outputObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, RenderObjectHandle** outputObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, ref RenderObjectHandle* outputObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, ref RenderObjectHandle* outputObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, RenderObjectHandle** outputObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, RenderObjectHandle** outputObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, ref RenderObjectHandle* outputObject, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_getRenderObject")]
        public unsafe partial int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, ref RenderObjectHandle* outputObject, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_delete")]
        public unsafe partial int RenderObjectNodeDelete(RenderObjectNodeHandle* node, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_delete")]
        public unsafe partial int RenderObjectNodeDelete(RenderObjectNodeHandle* node, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_delete")]
        public unsafe partial int RenderObjectNodeDelete(ref RenderObjectNodeHandle node, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        [NativeApi(EntryPoint = "NovelRT_RenderObjectNode_delete")]
        public unsafe partial int RenderObjectNodeDelete(ref RenderObjectNodeHandle node, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 14 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_create")]
        public unsafe partial SceneHandle* SceneCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(SceneHandle* scene, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(SceneHandle* scene, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(SceneHandle* scene, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(SceneHandle* scene, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(ref SceneHandle scene, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(ref SceneHandle scene, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(ref SceneHandle scene, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_getNodes")]
        public unsafe partial int SceneGetNodes(ref SceneHandle scene, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_insert")]
        public unsafe partial int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_remove")]
        public unsafe partial int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_delete")]
        public unsafe partial int SceneDelete(SceneHandle* scene, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_delete")]
        public unsafe partial int SceneDelete(SceneHandle* scene, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_delete")]
        public unsafe partial int SceneDelete(ref SceneHandle scene, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        [NativeApi(EntryPoint = "NovelRT_Scene_delete")]
        public unsafe partial int SceneDelete(ref SceneHandle scene, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 18 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_create")]
        public unsafe partial SceneNodeHandle* SceneNodeCreate();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(SceneNodeHandle* node, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(SceneNodeHandle* node, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(ref SceneNodeHandle node, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(ref SceneNodeHandle node, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getChildren")]
        public unsafe partial int SceneNodeGetChildren(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(SceneNodeHandle* node, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(SceneNodeHandle* node, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(ref SceneNodeHandle node, StdSetSceneNode** outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(ref SceneNodeHandle node, StdSetSceneNode** outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_getParents")]
        public unsafe partial int SceneNodeGetParents(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_insert")]
        public unsafe partial int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_remove")]
        public unsafe partial int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_isAdjacent")]
        public unsafe partial int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst(SceneNodeHandle* node, void* action, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst(SceneNodeHandle* node, void* action, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst<T0>(SceneNodeHandle* node, ref T0 action, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst<T0>(SceneNodeHandle* node, ref T0 action, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst(ref SceneNodeHandle node, void* action, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst(ref SceneNodeHandle node, void* action, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst<T0>(ref SceneNodeHandle node, ref T0 action, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirst")]
        public unsafe partial int SceneNodeTraverseBreadthFirst<T0>(ref SceneNodeHandle node, ref T0 action, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, BreadthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, BreadthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, ref BreadthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, BreadthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, BreadthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref BreadthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, BreadthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, BreadthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, ref BreadthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, BreadthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, BreadthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref BreadthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseBreadthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst(SceneNodeHandle* node, void* action, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst(SceneNodeHandle* node, void* action, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst<T0>(SceneNodeHandle* node, ref T0 action, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst<T0>(SceneNodeHandle* node, ref T0 action, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst(ref SceneNodeHandle node, void* action, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst(ref SceneNodeHandle node, void* action, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst<T0>(ref SceneNodeHandle node, ref T0 action, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirst")]
        public unsafe partial int SceneNodeTraverseDepthFirst<T0>(ref SceneNodeHandle node, ref T0 action, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, DepthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, DepthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, ref DepthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, ref DepthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, DepthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, DepthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref DepthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref DepthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, DepthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, DepthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, ref DepthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, ref DepthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, DepthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, DepthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref DepthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_traverseDepthFirstWithIterator")]
        public unsafe partial int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref DepthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_canReach")]
        public unsafe partial int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_delete")]
        public unsafe partial int SceneNodeDelete(SceneNodeHandle* node, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_delete")]
        public unsafe partial int SceneNodeDelete(SceneNodeHandle* node, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_delete")]
        public unsafe partial int SceneNodeDelete(ref SceneNodeHandle node, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNode_delete")]
        public unsafe partial int SceneNodeDelete(ref SceneNodeHandle node, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_delete")]
        public unsafe partial int SceneNodeSetDelete(StdSetSceneNode* nodeSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_delete")]
        public unsafe partial int SceneNodeSetDelete(StdSetSceneNode* nodeSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_delete")]
        public unsafe partial int SceneNodeSetDelete(ref StdSetSceneNode nodeSet, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_delete")]
        public unsafe partial int SceneNodeSetDelete(ref StdSetSceneNode nodeSet, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, uint* outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, uint* outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, ref uint outputSize, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSize")]
        public unsafe partial int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, ref uint outputSize, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, SceneNodeHandle** outputSceneNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, SceneNodeHandle** outputSceneNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, SceneNodeHandle** outputSceneNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, SceneNodeHandle** outputSceneNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeSet_getSceneNodeFromIndex")]
        public unsafe partial int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, BreadthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, BreadthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref BreadthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, BreadthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, BreadthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref BreadthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, BreadthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, BreadthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref BreadthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, BreadthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, BreadthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref BreadthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_create")]
        public unsafe partial int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref BreadthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_increment")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIncrement(BreadthFirstIterator* iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_increment")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIncrement(BreadthFirstIterator* iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_increment")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIncrement(ref BreadthFirstIterator iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_increment")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIncrement(ref BreadthFirstIterator iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeBreadthFirstIteratorPostFixIncrement(BreadthFirstIterator* iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeBreadthFirstIteratorPostFixIncrement(BreadthFirstIterator* iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeBreadthFirstIteratorPostFixIncrement(ref BreadthFirstIterator iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeBreadthFirstIteratorPostFixIncrement(ref BreadthFirstIterator iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeBreadthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, DepthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, DepthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref DepthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref DepthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, DepthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, DepthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref DepthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref DepthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, DepthFirstIterator** outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, DepthFirstIterator** outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref DepthFirstIterator* outputIterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref DepthFirstIterator* outputIterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, DepthFirstIterator** outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, DepthFirstIterator** outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref DepthFirstIterator* outputIterator, byte** errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_create")]
        public unsafe partial int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref DepthFirstIterator* outputIterator, ref byte* errorMessage) where T0 : unmanaged;

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_increment")]
        public unsafe partial int SceneNodeDepthFirstIteratorIncrement(DepthFirstIterator* iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_increment")]
        public unsafe partial int SceneNodeDepthFirstIteratorIncrement(DepthFirstIterator* iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_increment")]
        public unsafe partial int SceneNodeDepthFirstIteratorIncrement(ref DepthFirstIterator iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_increment")]
        public unsafe partial int SceneNodeDepthFirstIteratorIncrement(ref DepthFirstIterator iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeDepthFirstIteratorPostFixIncrement(DepthFirstIterator* iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeDepthFirstIteratorPostFixIncrement(DepthFirstIterator* iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeDepthFirstIteratorPostFixIncrement(ref DepthFirstIterator iterator, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_postFixIncrement")]
        public unsafe partial int SceneNodeDepthFirstIteratorPostFixIncrement(ref DepthFirstIterator iterator, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEnd")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_runFunction")]
        public unsafe partial int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        [NativeApi(EntryPoint = "NovelRT_SceneNodeDepthFirstIterator_isNotEqual")]
        public unsafe partial int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_create")]
        public unsafe partial int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, StepTimerHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_create")]
        public unsafe partial int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, StepTimerHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_create")]
        public unsafe partial int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, ref StepTimerHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_create")]
        public unsafe partial int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, ref StepTimerHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(StepTimerHandle* timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(StepTimerHandle* timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(StepTimerHandle* timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(StepTimerHandle* timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTicks")]
        public unsafe partial int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(StepTimerHandle* timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(StepTimerHandle* timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(StepTimerHandle* timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(StepTimerHandle* timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(ref StepTimerHandle timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(ref StepTimerHandle timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(ref StepTimerHandle timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTicks")]
        public unsafe partial int StepTimerGetTotalTicks(ref StepTimerHandle timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getElapsedTime")]
        public unsafe partial int StepTimerGetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(StepTimerHandle* timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(StepTimerHandle* timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(StepTimerHandle* timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(StepTimerHandle* timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(ref StepTimerHandle timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(ref StepTimerHandle timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(ref StepTimerHandle timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTotalTime")]
        public unsafe partial int StepTimerGetTotalTime(ref StepTimerHandle timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ulong* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ulong* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ref ulong output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTicks")]
        public unsafe partial int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ref ulong output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTicks")]
        public unsafe partial int StepTimerSetTargetElapsedTicks(StepTimerHandle* timer, ulong input, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTicks")]
        public unsafe partial int StepTimerSetTargetElapsedTicks(StepTimerHandle* timer, ulong input, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTicks")]
        public unsafe partial int StepTimerSetTargetElapsedTicks(ref StepTimerHandle timer, ulong input, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTicks")]
        public unsafe partial int StepTimerSetTargetElapsedTicks(ref StepTimerHandle timer, ulong input, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getTargetElapsedTime")]
        public unsafe partial int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle* target, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle* target, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle target, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle target, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle* target, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle* target, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle target, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setTargetElapsedTime")]
        public unsafe partial int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle target, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(StepTimerHandle* timer, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(StepTimerHandle* timer, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(StepTimerHandle* timer, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(StepTimerHandle* timer, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(ref StepTimerHandle timer, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(ref StepTimerHandle timer, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(ref StepTimerHandle timer, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFrameCount")]
        public unsafe partial int StepTimerGetFrameCount(ref StepTimerHandle timer, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(StepTimerHandle* timer, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(StepTimerHandle* timer, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(StepTimerHandle* timer, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(StepTimerHandle* timer, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, uint* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, uint* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, ref uint output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getFramesPerSecond")]
        public unsafe partial int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, ref uint output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, int* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, int* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, ref int output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, ref int output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, int* output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, int* output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, ref int output, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_getIsFixedTimeStep")]
        public unsafe partial int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, ref int output, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setIsFixedTimeStep")]
        public unsafe partial int StepTimerSetIsFixedTimeStep(StepTimerHandle* timer, int input, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setIsFixedTimeStep")]
        public unsafe partial int StepTimerSetIsFixedTimeStep(StepTimerHandle* timer, int input, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setIsFixedTimeStep")]
        public unsafe partial int StepTimerSetIsFixedTimeStep(ref StepTimerHandle timer, int input, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_setIsFixedTimeStep")]
        public unsafe partial int StepTimerSetIsFixedTimeStep(ref StepTimerHandle timer, int input, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_resetElapsedTime")]
        public unsafe partial int StepTimerResetElapsedTime(StepTimerHandle* timer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_resetElapsedTime")]
        public unsafe partial int StepTimerResetElapsedTime(StepTimerHandle* timer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_resetElapsedTime")]
        public unsafe partial int StepTimerResetElapsedTime(ref StepTimerHandle timer, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_resetElapsedTime")]
        public unsafe partial int StepTimerResetElapsedTime(ref StepTimerHandle timer, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(StepTimerHandle* timer, UtilitiesEventWithTimestampHandle* @event, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(StepTimerHandle* timer, UtilitiesEventWithTimestampHandle* @event, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(StepTimerHandle* timer, ref UtilitiesEventWithTimestampHandle @event, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(StepTimerHandle* timer, ref UtilitiesEventWithTimestampHandle @event, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(ref StepTimerHandle timer, UtilitiesEventWithTimestampHandle* @event, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(ref StepTimerHandle timer, UtilitiesEventWithTimestampHandle* @event, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(ref StepTimerHandle timer, ref UtilitiesEventWithTimestampHandle @event, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        [NativeApi(EntryPoint = "NovelRT_StepTimer_tick")]
        public unsafe partial int StepTimerTick(ref StepTimerHandle timer, ref UtilitiesEventWithTimestampHandle @event, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 11, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutablePath")]
        public unsafe partial byte* GetExecutablePath();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 11, Column 13 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutablePath")]
        public partial string GetExecutablePathS();

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutableDirPath")]
        public unsafe partial int GetExecutableDirPath(byte** path, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutableDirPath")]
        public unsafe partial int GetExecutableDirPath(byte** path, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutableDirPath")]
        public unsafe partial int GetExecutableDirPath(ref byte* path, byte** errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        [NativeApi(EntryPoint = "NovelRT_getExecutableDirPath")]
        public unsafe partial int GetExecutableDirPath(ref byte* path, ref byte* errorMessage);

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FRotateToAngleAroundPoint(GeoVector2F* vector, float angleRotationValue, GeoVector2F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FRotateToAngleAroundPoint(vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FRotateToAngleAroundPoint(ref GeoVector2F vector, float angleRotationValue, GeoVector2F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FRotateToAngleAroundPoint(ref vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideVector(GeoVector2F lhs, GeoVector2F rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, GeoVector2F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideFloat(GeoVector2F lhs, float rhs, ref GeoVector2F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddAssignVector(GeoVector2F* lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractAssignVector(GeoVector2F* lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyAssignVector(GeoVector2F* lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideAssignVector(GeoVector2F* lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideAssignVector(ref GeoVector2F lhs, GeoVector2F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddAssignFloat(GeoVector2F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FAddAssignFloat(ref GeoVector2F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FAddAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractAssignFloat(GeoVector2F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FSubtractAssignFloat(ref GeoVector2F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FSubtractAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyAssignFloat(GeoVector2F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FMultiplyAssignFloat(ref GeoVector2F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FMultiplyAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideAssignFloat(GeoVector2F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/../Maths/NovelRTGeoVector2F.h")]
        public unsafe int GeoVector2FDivideAssignFloat(ref GeoVector2F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector2FDivideAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        public unsafe int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoBoundsIntersectsWith(first, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoBounds.h")]
        public unsafe int GeoBoundsIntersectsWith(GeoBounds first, GeoBounds other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoBoundsIntersectsWith(first, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetR(RGBAConfigHandle* colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetR(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetR(RGBAConfigHandle* colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetR(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetR(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetR(ref RGBAConfigHandle colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetR(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetR(RGBAConfigHandle* colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetR(colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetR(ref RGBAConfigHandle colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetR(ref colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetG(RGBAConfigHandle* colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetG(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetG(RGBAConfigHandle* colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetG(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetG(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetG(ref RGBAConfigHandle colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetG(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetG(RGBAConfigHandle* colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetG(colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetG(ref RGBAConfigHandle colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetG(ref colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetB(RGBAConfigHandle* colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetB(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetB(RGBAConfigHandle* colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetB(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetB(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetB(ref RGBAConfigHandle colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetB(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetB(RGBAConfigHandle* colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetB(colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetB(ref RGBAConfigHandle colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetB(ref colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetA(RGBAConfigHandle* colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetA(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetA(RGBAConfigHandle* colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetA(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetA(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetA(ref RGBAConfigHandle colourConfig, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetA(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetA(RGBAConfigHandle* colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetA(colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigSetA(ref RGBAConfigHandle colourConfig, int inputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigSetA(ref colourConfig, inputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetRScalar(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetRScalar(RGBAConfigHandle* colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetRScalar(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetRScalar(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetRScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetRScalar(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetGScalar(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetGScalar(RGBAConfigHandle* colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetGScalar(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetGScalar(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetGScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetGScalar(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetBScalar(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetBScalar(RGBAConfigHandle* colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetBScalar(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetBScalar(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetBScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetBScalar(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetAScalar(colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetAScalar(RGBAConfigHandle* colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetAScalar(colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, float* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetAScalar(ref colourConfig, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigGetAScalar(ref RGBAConfigHandle colourConfig, ref float outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigGetAScalar(ref colourConfig, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigDestroy(RGBAConfigHandle* arg0, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigDestroy(arg0, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRGBAConfig.h")]
        public unsafe int RGBAConfigDestroy(ref RGBAConfigHandle arg0, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RGBAConfigDestroy(ref arg0, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, byte* windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(service, displayNumber, windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, ref byte windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(service, displayNumber, ref windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(WindowingServiceHandle* service, int displayNumber, string windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(service, displayNumber, windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, byte* windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(ref service, displayNumber, windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, ref byte windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(ref service, displayNumber, ref windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceInitialiseWindow(ref WindowingServiceHandle service, int displayNumber, string windowTitle, int transparencyEnabled, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceInitialiseWindow(ref service, displayNumber, windowTitle, transparencyEnabled, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceTearDown(WindowingServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceTearDown(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceTearDown(ref WindowingServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceTearDown(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, string[] windowTitleSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var windowTitle = (byte**) SilkMarshal.MarshalStringArrayToPtr(windowTitleSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowTitle(service, windowTitle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) windowTitle, windowTitleSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, string[] windowTitleSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var windowTitle = (byte**) SilkMarshal.MarshalStringArrayToPtr(windowTitleSa);
            var ret = WindowingServiceGetWindowTitle(service, windowTitle, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) windowTitle, windowTitleSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(WindowingServiceHandle* service, ref byte* windowTitle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowTitle(service, ref windowTitle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, string[] windowTitleSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var windowTitle = (byte**) SilkMarshal.MarshalStringArrayToPtr(windowTitleSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowTitle(ref service, windowTitle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) windowTitle, windowTitleSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, string[] windowTitleSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var windowTitle = (byte**) SilkMarshal.MarshalStringArrayToPtr(windowTitleSa);
            var ret = WindowingServiceGetWindowTitle(ref service, windowTitle, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) windowTitle, windowTitleSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowTitle(ref WindowingServiceHandle service, ref byte* windowTitle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowTitle(ref service, ref windowTitle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, byte* value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, ref byte value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(service, ref value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(WindowingServiceHandle* service, string value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, byte* value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, ref byte value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(ref service, ref value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowTitle(ref WindowingServiceHandle service, string value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowTitle(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowSize(WindowingServiceHandle* service, GeoVector2F value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowSize(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceSetWindowSize(ref WindowingServiceHandle service, GeoVector2F value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceSetWindowSize(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowSize(WindowingServiceHandle* service, GeoVector2F* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowSize(service, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowSize(WindowingServiceHandle* service, ref GeoVector2F output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowSize(service, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, GeoVector2F* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowSize(ref service, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Windowing/NovelRTWindowingService.h")]
        public unsafe int WindowingServiceGetWindowSize(ref WindowingServiceHandle service, ref GeoVector2F output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = WindowingServiceGetWindowSize(ref service, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreate(WindowingServiceHandle* windowingService, RenderingServiceHandle** outputRenderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreate(windowingService, outputRenderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreate(WindowingServiceHandle* windowingService, ref RenderingServiceHandle* outputRenderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreate(windowingService, ref outputRenderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreate(ref WindowingServiceHandle windowingService, RenderingServiceHandle** outputRenderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreate(ref windowingService, outputRenderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreate(ref WindowingServiceHandle windowingService, ref RenderingServiceHandle* outputRenderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreate(ref windowingService, ref outputRenderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceInitialiseRendering(RenderingServiceHandle* renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceInitialiseRendering(renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceInitialiseRendering(ref RenderingServiceHandle renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceInitialiseRendering(ref renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceTearDown(RenderingServiceHandle* renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceTearDown(renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceTearDown(ref RenderingServiceHandle renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceTearDown(ref renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, ref filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, ref filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, ref filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, ref filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(renderingService, ref outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, ref filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, ref filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, byte* filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, ref filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref byte filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, ref filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, filePath, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithFile(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, string filePath, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithFile(ref renderingService, ref outputImageRect, transform, layer, filePath, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(renderingService, outputImageRect, transform, layer, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(renderingService, outputImageRect, transform, layer, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(renderingService, ref outputImageRect, transform, layer, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(RenderingServiceHandle* renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(renderingService, ref outputImageRect, transform, layer, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(ref renderingService, outputImageRect, transform, layer, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ImageRectHandle** outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(ref renderingService, outputImageRect, transform, layer, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, RGBAConfigHandle* colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(ref renderingService, ref outputImageRect, transform, layer, colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateImageRectWithNothing(ref RenderingServiceHandle renderingService, ref ImageRectHandle* outputImageRect, Transform transform, int layer, ref RGBAConfigHandle colourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateImageRectWithNothing(ref renderingService, ref outputImageRect, transform, layer, ref colourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(renderingService, outputBasicFillRect, transform, layer, colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(renderingService, outputBasicFillRect, transform, layer, ref colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(renderingService, ref outputBasicFillRect, transform, layer, colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(RenderingServiceHandle* renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(renderingService, ref outputBasicFillRect, transform, layer, ref colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(ref renderingService, outputBasicFillRect, transform, layer, colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, BasicFillRectHandle** outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(ref renderingService, outputBasicFillRect, transform, layer, ref colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(ref renderingService, ref outputBasicFillRect, transform, layer, colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateBasicFillRect(ref RenderingServiceHandle renderingService, ref BasicFillRectHandle* outputBasicFillRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateBasicFillRect(ref renderingService, ref outputBasicFillRect, transform, layer, ref colourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(RenderingServiceHandle* renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, TextRectHandle** outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, RGBAConfigHandle* colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, byte* fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, ref byte fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, ref fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceCreateTextRect(ref RenderingServiceHandle renderingService, ref TextRectHandle* outputTextRect, Transform transform, int layer, ref RGBAConfigHandle colourConfig, float fontSize, string fontFilePath, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceCreateTextRect(ref renderingService, ref outputTextRect, transform, layer, ref colourConfig, fontSize, fontFilePath, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, CameraHandle** outputCamera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetCamera(renderingService, outputCamera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetCamera(RenderingServiceHandle* renderingService, ref CameraHandle* outputCamera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetCamera(renderingService, ref outputCamera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, CameraHandle** outputCamera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetCamera(ref renderingService, outputCamera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetCamera(ref RenderingServiceHandle renderingService, ref CameraHandle* outputCamera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetCamera(ref renderingService, ref outputCamera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceBeginFrame(RenderingServiceHandle* renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceBeginFrame(renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceBeginFrame(ref RenderingServiceHandle renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceBeginFrame(ref renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceEndFrame(RenderingServiceHandle* renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceEndFrame(renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceEndFrame(ref RenderingServiceHandle renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceEndFrame(ref renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, RGBAConfigHandle* colour, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceSetBackgroundColour(renderingService, colour, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceSetBackgroundColour(RenderingServiceHandle* renderingService, ref RGBAConfigHandle colour, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceSetBackgroundColour(renderingService, ref colour, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, RGBAConfigHandle* colour, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceSetBackgroundColour(ref renderingService, colour, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceSetBackgroundColour(ref RenderingServiceHandle renderingService, ref RGBAConfigHandle colour, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceSetBackgroundColour(ref renderingService, ref colour, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithNothing(renderingService, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithNothing(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithNothing(renderingService, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithNothing(ref renderingService, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithNothing(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithNothing(ref renderingService, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, byte* fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, ref byte fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, outputTexture, ref fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, TextureHandle** outputTexture, string fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, byte* fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, ref outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, ref outputTexture, ref fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(RenderingServiceHandle* renderingService, ref TextureHandle* outputTexture, string fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(renderingService, ref outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, byte* fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, ref byte fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, outputTexture, ref fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, TextureHandle** outputTexture, string fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, byte* fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, ref outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, ref byte fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, ref outputTexture, ref fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetTextureWithFile(ref RenderingServiceHandle renderingService, ref TextureHandle* outputTexture, string fileTarget, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetTextureWithFile(ref renderingService, ref outputTexture, fileTarget, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, outputFontSet, ref fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, ref outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, ref outputFontSet, ref fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(RenderingServiceHandle* renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(renderingService, ref outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, byte* fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, ref byte fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, outputFontSet, ref fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, FontSetHandle** outputFontSet, string fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, byte* fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, ref outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, ref byte fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, ref outputFontSet, ref fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceGetFontSet(ref RenderingServiceHandle renderingService, ref FontSetHandle* outputFontSet, string fileTarget, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceGetFontSet(ref renderingService, ref outputFontSet, fileTarget, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceDestroy(RenderingServiceHandle* renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceDestroy(renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTRenderingService.h")]
        public unsafe int RenderingServiceDestroy(ref RenderingServiceHandle renderingService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderingServiceDestroy(ref renderingService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(sceneConstructionEvent, renderingService, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(sceneConstructionEvent, renderingService, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(sceneConstructionEvent, ref renderingService, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(UtilitiesEventHandle* sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(sceneConstructionEvent, ref renderingService, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(ref sceneConstructionEvent, renderingService, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, RenderingServiceHandle* renderingService, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(ref sceneConstructionEvent, renderingService, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(ref sceneConstructionEvent, ref renderingService, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceCreate(ref UtilitiesEventHandle sceneConstructionEvent, ref RenderingServiceHandle renderingService, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceCreate(ref sceneConstructionEvent, ref renderingService, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, int* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetIsFpsCounterVisible(service, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetIsFpsCounterVisible(DebugServiceHandle* service, ref int result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetIsFpsCounterVisible(service, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, int* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetIsFpsCounterVisible(ref service, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetIsFpsCounterVisible(ref DebugServiceHandle service, ref int result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetIsFpsCounterVisible(ref service, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceSetIsFpsCounterVisible(DebugServiceHandle* service, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceSetIsFpsCounterVisible(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceSetIsFpsCounterVisible(ref DebugServiceHandle service, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceSetIsFpsCounterVisible(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, uint* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetFramesPerSecond(service, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetFramesPerSecond(DebugServiceHandle* service, ref uint outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetFramesPerSecond(service, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, uint* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetFramesPerSecond(ref service, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceGetFramesPerSecond(ref DebugServiceHandle service, ref uint outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceGetFramesPerSecond(ref service, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceSetFramesPerSecond(DebugServiceHandle* service, uint value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceSetFramesPerSecond(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/NovelRTDebugService.h")]
        public unsafe int DebugServiceSetFramesPerSecond(ref DebugServiceHandle service, uint value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = DebugServiceSetFramesPerSecond(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(LoggingServiceHandle* service, byte* message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(LoggingServiceHandle* service, ref byte message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(service, ref message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(LoggingServiceHandle* service, string message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(ref LoggingServiceHandle service, byte* message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(ref service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(ref LoggingServiceHandle service, ref byte message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(ref service, ref message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLog(ref LoggingServiceHandle service, string message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLog(ref service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(LoggingServiceHandle* service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(LoggingServiceHandle* service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(LoggingServiceHandle* service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(ref service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInfoLine(ref LoggingServiceHandle service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInfoLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(LoggingServiceHandle* service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(LoggingServiceHandle* service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(LoggingServiceHandle* service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(ref service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogErrorLine(ref LoggingServiceHandle service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogErrorLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(LoggingServiceHandle* service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(LoggingServiceHandle* service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(LoggingServiceHandle* service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(ref service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogWarningLine(ref LoggingServiceHandle service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogWarningLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(LoggingServiceHandle* service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(LoggingServiceHandle* service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(LoggingServiceHandle* service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, byte* message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, ref byte message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(ref service, ref message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogDebugLine(ref LoggingServiceHandle service, string message, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogDebugLine(ref service, message, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(LoggingServiceHandle* service, byte* message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(LoggingServiceHandle* service, ref byte message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(service, ref message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(LoggingServiceHandle* service, string message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(ref LoggingServiceHandle service, byte* message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(ref service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(ref LoggingServiceHandle service, ref byte message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(ref service, ref message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceLogInternal(ref LoggingServiceHandle service, string message, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceLogInternal(ref service, message, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceSetLogLevel(LoggingServiceHandle* service, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceSetLogLevel(service, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceSetLogLevel(ref LoggingServiceHandle service, LogLevel level, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceSetLogLevel(ref service, level, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, byte* exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, ref byte exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, @object, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(LoggingServiceHandle* service, void* @object, string exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, byte* exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, ref @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, ref byte exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, ref @object, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(LoggingServiceHandle* service, ref T0 @object, string exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(service, ref @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, byte* exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, ref byte exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, @object, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr(ref LoggingServiceHandle service, void* @object, string exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, byte* exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, ref @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, ref byte exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, ref @object, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNullPtr<T0>(ref LoggingServiceHandle service, ref T0 @object, string exceptionMessage, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNullPtr(ref service, ref @object, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, byte* exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(service, error, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, ref byte exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(service, error, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(LoggingServiceHandle* service, int error, string exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(service, error, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, byte* exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(ref service, error, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, ref byte exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(ref service, error, ref exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTLoggingService.h")]
        public unsafe int LoggingServiceThrowIfNotZero(ref LoggingServiceHandle service, int error, string exceptionMessage, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoggingServiceThrowIfNotZero(ref service, error, exceptionMessage, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceDestroy(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceDestroy(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceDestroy(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceDestroy(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceInitialiseAudio(AudioServiceHandle* service, int* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceInitialiseAudio(service, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceInitialiseAudio(AudioServiceHandle* service, ref int output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceInitialiseAudio(service, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceInitialiseAudio(ref AudioServiceHandle service, int* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceInitialiseAudio(ref service, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceInitialiseAudio(ref AudioServiceHandle service, ref int output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceInitialiseAudio(ref service, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, byte* input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, byte* input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, ref byte input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, ref input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, ref byte input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, ref input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, string input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(AudioServiceHandle* service, string input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, byte* input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, byte* input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, ref byte input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, ref input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, ref byte input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, ref input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, string input, IteratorHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int LoadMusic(ref AudioServiceHandle service, string input, ref IteratorHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = LoadMusic(ref service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetSoundVolume(AudioServiceHandle* service, uint source, float val, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetSoundVolume(service, source, val, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetSoundVolume(ref AudioServiceHandle service, uint source, float val, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetSoundVolume(ref service, source, val, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetSoundPosition(AudioServiceHandle* service, uint source, float posX, float posY, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetSoundPosition(service, source, posX, posY, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetSoundPosition(ref AudioServiceHandle service, uint source, float posX, float posY, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetSoundPosition(ref service, source, posX, posY, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceResumeMusic(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceResumeMusic(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceResumeMusic(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceResumeMusic(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlayMusic(AudioServiceHandle* service, IteratorHandle* handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlayMusic(service, handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlayMusic(AudioServiceHandle* service, ref IteratorHandle handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlayMusic(service, ref handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlayMusic(ref AudioServiceHandle service, IteratorHandle* handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlayMusic(ref service, handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlayMusic(ref AudioServiceHandle service, ref IteratorHandle handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlayMusic(ref service, ref handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePauseMusic(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePauseMusic(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePauseMusic(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePauseMusic(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceStopMusic(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceStopMusic(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceStopMusic(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceStopMusic(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetMusicVolume(AudioServiceHandle* service, float value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetMusicVolume(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceSetMusicVolume(ref AudioServiceHandle service, float value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceSetMusicVolume(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceCheckSources(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceCheckSources(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceCheckSources(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceCheckSources(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, byte* input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, ref input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, ref byte input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, ref input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, string input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(AudioServiceHandle* service, string input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, byte* input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, ref input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, ref byte input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, ref input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, string input, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, input, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceLoadSound(ref AudioServiceHandle service, string input, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceLoadSound(ref service, input, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceUnload(AudioServiceHandle* service, uint handle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceUnload(service, handle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceUnload(ref AudioServiceHandle service, uint handle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceUnload(ref service, handle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlaySound(AudioServiceHandle* service, uint handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlaySound(service, handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServicePlaySound(ref AudioServiceHandle service, uint handle, int loops, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServicePlaySound(ref service, handle, loops, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceStopSound(AudioServiceHandle* service, uint handle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceStopSound(service, handle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceStopSound(ref AudioServiceHandle service, uint handle, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceStopSound(ref service, handle, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceTearDown(AudioServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceTearDown(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Audio/NovelRTAudioService.h")]
        public unsafe int AudioServiceTearDown(ref AudioServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = AudioServiceTearDown(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, KeyState* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetCurrentState(changeLog, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetCurrentState(ChangeLogHandle* changeLog, ref KeyState output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetCurrentState(changeLog, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, KeyState* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetCurrentState(ref changeLog, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetCurrentState(ref ChangeLogHandle changeLog, ref KeyState output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetCurrentState(ref changeLog, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetChangeCount(changeLog, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetChangeCount(ChangeLogHandle* changeLog, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetChangeCount(changeLog, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetChangeCount(ref changeLog, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTKeyStateFrameChangeLog.h")]
        public unsafe int KeyStateFrameChangeLogGetChangeCount(ref ChangeLogHandle changeLog, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = KeyStateFrameChangeLogGetChangeCount(ref changeLog, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectExecuteObjectBehaviour(BasicInteractionRectHandle* @object, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectExecuteObjectBehaviour(@object, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectExecuteObjectBehaviour(ref BasicInteractionRectHandle @object, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectExecuteObjectBehaviour(ref @object, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetTransform(@object, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetTransform(BasicInteractionRectHandle* @object, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetTransform(@object, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetTransform(ref @object, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetTransform(ref BasicInteractionRectHandle @object, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetTransform(ref @object, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetTransform(BasicInteractionRectHandle* @object, Transform transform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetTransform(@object, transform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetTransform(ref BasicInteractionRectHandle @object, Transform transform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetTransform(ref @object, transform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetLayer(@object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetLayer(BasicInteractionRectHandle* @object, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetLayer(@object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetLayer(ref @object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetLayer(ref BasicInteractionRectHandle @object, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetLayer(ref @object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetLayer(BasicInteractionRectHandle* @object, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetLayer(@object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetLayer(ref BasicInteractionRectHandle @object, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetLayer(ref @object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetActive(@object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetActive(BasicInteractionRectHandle* @object, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetActive(@object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, int* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetActive(ref @object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetActive(ref BasicInteractionRectHandle @object, ref int outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetActive(ref @object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetActive(BasicInteractionRectHandle* @object, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetActive(@object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetActive(ref BasicInteractionRectHandle @object, int value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetActive(ref @object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectValidateInteractionPrimeter(BasicInteractionRectHandle* @object, GeoVector2F mousePosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectValidateInteractionPrimeter(@object, mousePosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectValidateInteractionPrimeter(ref BasicInteractionRectHandle @object, GeoVector2F mousePosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectValidateInteractionPrimeter(ref @object, mousePosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetSubscribedKey(@object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetSubscribedKey(BasicInteractionRectHandle* @object, ref KeyCode outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetSubscribedKey(@object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode* outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetSubscribedKey(ref @object, outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectGetSubscribedKey(ref BasicInteractionRectHandle @object, ref KeyCode outputValue, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectGetSubscribedKey(ref @object, ref outputValue, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetSubscribedKey(BasicInteractionRectHandle* @object, KeyCode value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetSubscribedKey(@object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectSetSubscribedKey(ref BasicInteractionRectHandle @object, KeyCode value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectSetSubscribedKey(ref @object, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectAddInteraction(BasicInteractionRectHandle* @object, void* ptr, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectAddInteraction(@object, ptr, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectAddInteraction<T0>(BasicInteractionRectHandle* @object, ref T0 ptr, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectAddInteraction(@object, ref ptr, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectAddInteraction(ref BasicInteractionRectHandle @object, void* ptr, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectAddInteraction(ref @object, ptr, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTBasicInteractionRect.h")]
        public unsafe int InputBasicInteractionRectAddInteraction<T0>(ref BasicInteractionRectHandle @object, ref T0 ptr, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InputBasicInteractionRectAddInteraction(ref @object, ref ptr, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceConsumePlayerInput(InteractionServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceConsumePlayerInput(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceConsumePlayerInput(ref InteractionServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceConsumePlayerInput(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceCreateBasicInteractionRect(service, transform, layer, outputRect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceCreateBasicInteractionRect(InteractionServiceHandle* service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceCreateBasicInteractionRect(service, transform, layer, ref outputRect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, BasicInteractionRectHandle** outputRect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceCreateBasicInteractionRect(ref service, transform, layer, outputRect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceCreateBasicInteractionRect(ref InteractionServiceHandle service, Transform transform, int layer, ref BasicInteractionRectHandle* outputRect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceCreateBasicInteractionRect(ref service, transform, layer, ref outputRect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceExecuteClickedInteractable(InteractionServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceExecuteClickedInteractable(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceExecuteClickedInteractable(ref InteractionServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceExecuteClickedInteractable(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceSetScreenSize(InteractionServiceHandle* service, GeoVector2F value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceSetScreenSize(service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceSetScreenSize(ref InteractionServiceHandle service, GeoVector2F value, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceSetScreenSize(ref service, value, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ChangeLogHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceGetKeyState(service, value, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceGetKeyState(InteractionServiceHandle* service, KeyCode value, ref ChangeLogHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceGetKeyState(service, value, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ChangeLogHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceGetKeyState(ref service, value, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Input/NovelRTInteractionService.h")]
        public unsafe int InteractionServiceGetKeyState(ref InteractionServiceHandle service, KeyCode value, ref ChangeLogHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = InteractionServiceGetKeyState(ref service, value, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampCreate(ulong ticks, TimestampHandle** outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampCreate(ticks, outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 13, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampCreate(ulong ticks, ref TimestampHandle* outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampCreate(ticks, ref outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampIsNaN(TimestampHandle* timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampIsNaN(timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampIsNaN(ref TimestampHandle timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampIsNaN(ref timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsDouble(TimestampHandle* timestamp, double* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsDouble(timestamp, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsDouble(TimestampHandle* timestamp, ref double output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsDouble(timestamp, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsDouble(ref TimestampHandle timestamp, double* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsDouble(ref timestamp, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsDouble(ref TimestampHandle timestamp, ref double output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsDouble(ref timestamp, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsFloat(TimestampHandle* timestamp, float* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsFloat(timestamp, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsFloat(TimestampHandle* timestamp, ref float output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsFloat(timestamp, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsFloat(ref TimestampHandle timestamp, float* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsFloat(ref timestamp, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGetSecondsFloat(ref TimestampHandle timestamp, ref float output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGetSecondsFloat(ref timestamp, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampZero(TimestampHandle** outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampZero(outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampZero(ref TimestampHandle* outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampZero(ref outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampFromSeconds(double seconds, TimestampHandle** outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampFromSeconds(seconds, outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampFromSeconds(double seconds, ref TimestampHandle* outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampFromSeconds(seconds, ref outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(ref first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(ref first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(ref first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddTimestamp(ref first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(ref first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(ref first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(ref first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractTimestamp(ref first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(ref first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(ref first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(ref first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyTimestamp(ref first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(TimestampHandle* first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(TimestampHandle* first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(ref first, other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(ref TimestampHandle first, TimestampHandle* other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(ref first, other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(ref first, ref other, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideTimestamp(ref TimestampHandle first, ref TimestampHandle other, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideTimestamp(ref first, ref other, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddAssignTimestamp(TimestampHandle* first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddAssignTimestamp(first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddAssignTimestamp(first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddAssignTimestamp(ref first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampAddAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampAddAssignTimestamp(ref first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractAssignTimestamp(TimestampHandle* first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractAssignTimestamp(first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractAssignTimestamp(first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractAssignTimestamp(ref first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampSubtractAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampSubtractAssignTimestamp(ref first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyAssignTimestamp(TimestampHandle* first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyAssignTimestamp(first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyAssignTimestamp(first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyAssignTimestamp(ref first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampMultiplyAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampMultiplyAssignTimestamp(ref first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideAssignTimestamp(TimestampHandle* first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideAssignTimestamp(first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideAssignTimestamp(TimestampHandle* first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideAssignTimestamp(first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideAssignTimestamp(ref TimestampHandle first, TimestampHandle* other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideAssignTimestamp(ref first, other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampDivideAssignTimestamp(ref TimestampHandle first, ref TimestampHandle other, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampDivideAssignTimestamp(ref first, ref other, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThan(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThan(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThan(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThan(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThan(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThan(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThan(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThan(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThanOrEqualTo(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThanOrEqualTo(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThanOrEqualTo(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampLessThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampLessThanOrEqualTo(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThan(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThan(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThan(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThan(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThan(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThan(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThan(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThan(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThanOrEqualTo(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThanOrEqualTo(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThanOrEqualTo(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThanOrEqualTo(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampGreaterThanOrEqualTo(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampGreaterThanOrEqualTo(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampEqual(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampEqual(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampEqual(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampEqual(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampEqual(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampEqual(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampEqual(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampNotEqual(TimestampHandle* lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampNotEqual(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampNotEqual(TimestampHandle* lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampNotEqual(lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampNotEqual(ref TimestampHandle lhs, TimestampHandle* rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampNotEqual(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTTimestamp.h")]
        public unsafe int TimestampNotEqual(ref TimestampHandle lhs, ref TimestampHandle rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TimestampNotEqual(ref lhs, ref rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceDestroy(RuntimeServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceDestroy(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceDestroy(ref RuntimeServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceDestroy(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceInitialise(RuntimeServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceInitialise(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceInitialise(ref RuntimeServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceInitialise(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceTearDown(RuntimeServiceHandle* service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceTearDown(service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/DotNet/NovelRTRuntimeService.h")]
        public unsafe int RuntimeServiceTearDown(ref RuntimeServiceHandle service, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RuntimeServiceTearDown(ref service, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerRunNovel(NovelRunnerHandle* runner, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerRunNovel(runner, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerRunNovel(ref NovelRunnerHandle runner, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerRunNovel(ref runner, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerDestroy(NovelRunnerHandle* runner, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerDestroy(runner, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerDestroy(ref NovelRunnerHandle runner, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerDestroy(ref runner, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetAudioService(NovelRunnerHandle* runner, AudioServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetAudioService(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetAudioService(NovelRunnerHandle* runner, ref AudioServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetAudioService(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, AudioServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetAudioService(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetAudioService(ref NovelRunnerHandle runner, ref AudioServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetAudioService(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, InteractionServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetInteractionService(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetInteractionService(NovelRunnerHandle* runner, ref InteractionServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetInteractionService(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, InteractionServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetInteractionService(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetInteractionService(ref NovelRunnerHandle runner, ref InteractionServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetInteractionService(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, WindowingServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetWindowingService(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetWindowingService(NovelRunnerHandle* runner, ref WindowingServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetWindowingService(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, WindowingServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetWindowingService(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetWindowingService(ref NovelRunnerHandle runner, ref WindowingServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetWindowingService(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, RuntimeServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRuntimeService(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRuntimeService(NovelRunnerHandle* runner, ref RuntimeServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRuntimeService(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, RuntimeServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRuntimeService(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRuntimeService(ref NovelRunnerHandle runner, ref RuntimeServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRuntimeService(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRenderer(NovelRunnerHandle* runner, RenderingServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRenderer(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRenderer(NovelRunnerHandle* runner, ref RenderingServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRenderer(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, RenderingServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRenderer(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetRenderer(ref NovelRunnerHandle runner, ref RenderingServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetRenderer(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetDebugService(NovelRunnerHandle* runner, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetDebugService(runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetDebugService(NovelRunnerHandle* runner, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetDebugService(runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, DebugServiceHandle** outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetDebugService(ref runner, outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetDebugService(ref NovelRunnerHandle runner, ref DebugServiceHandle* outputService, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetDebugService(ref runner, ref outputService, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddUpdate(NovelRunnerHandle* runner, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddUpdate(runner, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddUpdate<T0>(NovelRunnerHandle* runner, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddUpdate(runner, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddUpdate(ref NovelRunnerHandle runner, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddUpdate(ref runner, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddUpdate<T0>(ref NovelRunnerHandle runner, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddUpdate(ref runner, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddSceneConstructionRequested(NovelRunnerHandle* runner, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddSceneConstructionRequested(runner, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddSceneConstructionRequested<T0>(NovelRunnerHandle* runner, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddSceneConstructionRequested(runner, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddSceneConstructionRequested(ref NovelRunnerHandle runner, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddSceneConstructionRequested(ref runner, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerAddSceneConstructionRequested<T0>(ref NovelRunnerHandle runner, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerAddSceneConstructionRequested(ref runner, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, UtilitiesEventWithTimestampHandle** outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetUpdateEvent(runner, outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetUpdateEvent(NovelRunnerHandle* runner, ref UtilitiesEventWithTimestampHandle* outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetUpdateEvent(runner, ref outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, UtilitiesEventWithTimestampHandle** outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetUpdateEvent(ref runner, outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetUpdateEvent(ref NovelRunnerHandle runner, ref UtilitiesEventWithTimestampHandle* outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetUpdateEvent(ref runner, ref outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, UtilitiesEventHandle** outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetSceneConstructionEvent(runner, outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetSceneConstructionEvent(NovelRunnerHandle* runner, ref UtilitiesEventHandle* outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetSceneConstructionEvent(runner, ref outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, UtilitiesEventHandle** outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetSceneConstructionEvent(ref runner, outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/NovelRTNovelRunner.h")]
        public unsafe int NovelRunnerGetSceneConstructionEvent(ref NovelRunnerHandle runner, ref UtilitiesEventHandle* outputEvent, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = NovelRunnerGetSceneConstructionEvent(ref runner, ref outputEvent, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetTexture(frame, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetTexture(frame, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetTexture(ref frame, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetTexture(ref frame, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, TextureHandle* texture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetTexture(frame, texture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetTexture(SpriteAnimatorFrameHandle* frame, ref TextureHandle texture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetTexture(frame, ref texture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, TextureHandle* texture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetTexture(ref frame, texture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetTexture(ref SpriteAnimatorFrameHandle frame, ref TextureHandle texture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetTexture(ref frame, ref texture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle** outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetDuration(frame, outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle* outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetDuration(frame, ref outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle** outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetDuration(ref frame, outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameGetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle* outputTimestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameGetDuration(ref frame, ref outputTimestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, TimestampHandle* timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetDuration(frame, timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetDuration(SpriteAnimatorFrameHandle* frame, ref TimestampHandle timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetDuration(frame, ref timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, TimestampHandle* timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetDuration(ref frame, timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameSetDuration(ref SpriteAnimatorFrameHandle frame, ref TimestampHandle timestamp, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameSetDuration(ref frame, ref timestamp, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameEnter(SpriteAnimatorFrameHandle* frame, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameEnter(frame, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameEnter<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameEnter(frame, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameEnter(ref SpriteAnimatorFrameHandle frame, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameEnter(ref frame, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameEnter<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameEnter(ref frame, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameExit(SpriteAnimatorFrameHandle* frame, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameExit(frame, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameExit<T0>(SpriteAnimatorFrameHandle* frame, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameExit(frame, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameExit(ref SpriteAnimatorFrameHandle frame, void* func, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameExit(ref frame, func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorFrame.h")]
        public unsafe int SpriteAnimatorFrameAddFrameExit<T0>(ref SpriteAnimatorFrameHandle frame, ref T0 func, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameAddFrameExit(ref frame, ref func, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(state, stateTarget, vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(state, stateTarget, ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(state, ref stateTarget, vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(state, ref stateTarget, ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, BoolFunctionVectorHandle* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(ref state, stateTarget, vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle* stateTarget, ref BoolFunctionVectorHandle vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(ref state, stateTarget, ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, BoolFunctionVectorHandle* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(ref state, ref stateTarget, vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateInsertNewState(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle stateTarget, ref BoolFunctionVectorHandle vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateInsertNewState(ref state, ref stateTarget, ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateRemoveStateAtIndex(SpriteAnimatorStateHandle* state, uint index, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateRemoveStateAtIndex(state, index, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateRemoveStateAtIndex(ref SpriteAnimatorStateHandle state, uint index, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStateRemoveStateAtIndex(ref state, index, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, int* outputLoop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetShouldLoop(state, outputLoop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetShouldLoop(SpriteAnimatorStateHandle* state, ref int outputLoop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetShouldLoop(state, ref outputLoop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, int* outputLoop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetShouldLoop(ref state, outputLoop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetShouldLoop(ref SpriteAnimatorStateHandle state, ref int outputLoop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetShouldLoop(ref state, ref outputLoop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetShouldLoop(SpriteAnimatorStateHandle* state, int loop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetShouldLoop(state, loop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetShouldLoop(ref SpriteAnimatorStateHandle state, int loop, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetShouldLoop(ref state, loop, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle** outputFramess, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetFrames(state, outputFramess, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle* outputFramess, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetFrames(state, ref outputFramess, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle** outputFramess, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetFrames(ref state, outputFramess, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateGetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle* outputFramess, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateGetFrames(ref state, ref outputFramess, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, SpriteAnimatorFrameVectorHandle* frames, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetFrames(state, frames, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetFrames(SpriteAnimatorStateHandle* state, ref SpriteAnimatorFrameVectorHandle frames, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetFrames(state, ref frames, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, SpriteAnimatorFrameVectorHandle* frames, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetFrames(ref state, frames, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateSetFrames(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorFrameVectorHandle frames, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateSetFrames(ref state, ref frames, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, SpriteAnimatorStateHandle** outputTransitionState, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateTryFindValidTransition(state, outputTransitionState, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateTryFindValidTransition(SpriteAnimatorStateHandle* state, ref SpriteAnimatorStateHandle* outputTransitionState, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateTryFindValidTransition(state, ref outputTransitionState, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, SpriteAnimatorStateHandle** outputTransitionState, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateTryFindValidTransition(ref state, outputTransitionState, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorStateTryFindValidTransition(ref SpriteAnimatorStateHandle state, ref SpriteAnimatorStateHandle* outputTransitionState, string[] errorMesssageSa)
        {
            // StringArrayOverloader
            var errorMesssage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMesssageSa);
            var ret = SpriteAnimatorStateTryFindValidTransition(ref state, ref outputTransitionState, errorMesssage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMesssage, errorMesssageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, SpriteAnimatorFrameHandle* frame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorAddFrame(vector, frame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorAddFrame(SpriteAnimatorFrameVectorHandle* vector, ref SpriteAnimatorFrameHandle frame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorAddFrame(vector, ref frame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, SpriteAnimatorFrameHandle* frame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorAddFrame(ref vector, frame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorAddFrame(ref SpriteAnimatorFrameVectorHandle vector, ref SpriteAnimatorFrameHandle frame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorAddFrame(ref vector, ref frame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, SpriteAnimatorFrameHandle** outputFrame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorGetFrameAtIndex(vector, index, outputFrame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorGetFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorGetFrameAtIndex(vector, index, ref outputFrame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, SpriteAnimatorFrameHandle** outputFrame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorGetFrameAtIndex(ref vector, index, outputFrame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorGetFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, ref SpriteAnimatorFrameHandle* outputFrame, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorGetFrameAtIndex(ref vector, index, ref outputFrame, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorRemoveFrameAtIndex(SpriteAnimatorFrameVectorHandle* vector, int index, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorRemoveFrameAtIndex(vector, index, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorRemoveFrameAtIndex(ref SpriteAnimatorFrameVectorHandle vector, int index, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorRemoveFrameAtIndex(ref vector, index, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorDelete(SpriteAnimatorFrameVectorHandle* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorDelete(vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimatorState.h")]
        public unsafe int SpriteAnimatorFrameVectorDelete(ref SpriteAnimatorFrameVectorHandle vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorFrameVectorDelete(ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(runner, rect, outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(NovelRunnerHandle* runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(runner, rect, ref outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(runner, ref rect, outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(NovelRunnerHandle* runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(runner, ref rect, ref outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, SpriteAnimatorHandle** outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(ref runner, rect, outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ImageRectHandle* rect, ref SpriteAnimatorHandle* outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(ref runner, rect, ref outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, SpriteAnimatorHandle** outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(ref runner, ref rect, outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorCreate(ref NovelRunnerHandle runner, ref ImageRectHandle rect, ref SpriteAnimatorHandle* outputAnimator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorCreate(ref runner, ref rect, ref outputAnimator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorPlay(SpriteAnimatorHandle* animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorPlay(animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorPlay(ref SpriteAnimatorHandle animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorPlay(ref animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorPause(SpriteAnimatorHandle* animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorPause(animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorPause(ref SpriteAnimatorHandle animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorPause(ref animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorStop(SpriteAnimatorHandle* animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStop(animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorStop(ref SpriteAnimatorHandle animator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorStop(ref animator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, AnimatorPlayState* outputPlayState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorGetCurrentPlayState(animator, outputPlayState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorGetCurrentPlayState(SpriteAnimatorHandle* animator, ref AnimatorPlayState outputPlayState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorGetCurrentPlayState(animator, ref outputPlayState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, AnimatorPlayState* outputPlayState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorGetCurrentPlayState(ref animator, outputPlayState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorGetCurrentPlayState(ref SpriteAnimatorHandle animator, ref AnimatorPlayState outputPlayState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorGetCurrentPlayState(ref animator, ref outputPlayState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, SpriteAnimatorStateHandle* state, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorInsertNewState(animator, state, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorInsertNewState(SpriteAnimatorHandle* animator, ref SpriteAnimatorStateHandle state, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorInsertNewState(animator, ref state, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, SpriteAnimatorStateHandle* state, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorInsertNewState(ref animator, state, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Animation/NovelRTSpriteAnimator.h")]
        public unsafe int SpriteAnimatorInsertNewState(ref SpriteAnimatorHandle animator, ref SpriteAnimatorStateHandle state, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SpriteAnimatorInsertNewState(ref animator, ref state, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetTransform(BasicFillRectHandle* rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetTransform(rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetTransform(BasicFillRectHandle* rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetTransform(rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetTransform(ref BasicFillRectHandle rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetTransform(ref rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetTransform(ref BasicFillRectHandle rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetTransform(ref rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetTransform(BasicFillRectHandle* rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetTransform(rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetTransform(ref BasicFillRectHandle rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetTransform(ref rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetLayer(BasicFillRectHandle* rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetLayer(rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetLayer(BasicFillRectHandle* rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetLayer(rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetLayer(ref BasicFillRectHandle rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetLayer(ref rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetLayer(ref BasicFillRectHandle rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetLayer(ref rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetLayer(BasicFillRectHandle* rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetLayer(rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetLayer(ref BasicFillRectHandle rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetLayer(ref rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetActive(BasicFillRectHandle* rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetActive(rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetActive(BasicFillRectHandle* rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetActive(rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetActive(ref BasicFillRectHandle rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetActive(ref rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetActive(ref BasicFillRectHandle rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetActive(ref rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetActive(BasicFillRectHandle* rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetActive(rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetActive(ref BasicFillRectHandle rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetActive(ref rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectExecuteObjectBehaviour(BasicFillRectHandle* rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectExecuteObjectBehaviour(rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectExecuteObjectBehaviour(ref BasicFillRectHandle rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectExecuteObjectBehaviour(ref rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle** outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetColourConfig(rect, outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetColourConfig(rect, ref outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle** outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetColourConfig(ref rect, outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle* outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetColourConfig(ref rect, ref outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, RGBAConfigHandle* inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetColourConfig(rect, inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetColourConfig(BasicFillRectHandle* rect, ref RGBAConfigHandle inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetColourConfig(rect, ref inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, RGBAConfigHandle* inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetColourConfig(ref rect, inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectSetColourConfig(ref BasicFillRectHandle rect, ref RGBAConfigHandle inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectSetColourConfig(ref rect, ref inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetAsRenderObjectPtr(rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetAsRenderObjectPtr(BasicFillRectHandle* rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetAsRenderObjectPtr(rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetAsRenderObjectPtr(ref rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTBasicFillRect.h")]
        public unsafe int BasicFillRectGetAsRenderObjectPtr(ref BasicFillRectHandle rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = BasicFillRectGetAsRenderObjectPtr(ref rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FRotateToAngleAroundPoint(GeoVector3F* vector, float angleRotationValue, GeoVector3F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FRotateToAngleAroundPoint(vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FRotateToAngleAroundPoint(ref GeoVector3F vector, float angleRotationValue, GeoVector3F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FRotateToAngleAroundPoint(ref vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 36, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideVector(GeoVector3F lhs, GeoVector3F rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, GeoVector3F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideFloat(GeoVector3F lhs, float rhs, ref GeoVector3F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddAssignVector(GeoVector3F* lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractAssignVector(GeoVector3F* lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyAssignVector(GeoVector3F* lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideAssignVector(GeoVector3F* lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideAssignVector(ref GeoVector3F lhs, GeoVector3F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddAssignFloat(GeoVector3F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FAddAssignFloat(ref GeoVector3F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FAddAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractAssignFloat(GeoVector3F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FSubtractAssignFloat(ref GeoVector3F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FSubtractAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyAssignFloat(GeoVector3F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FMultiplyAssignFloat(ref GeoVector3F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FMultiplyAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideAssignFloat(GeoVector3F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector3F.h")]
        public unsafe int GeoVector3FDivideAssignFloat(ref GeoVector3F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector3FDivideAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FRotateToAngleAroundPoint(GeoVector4F* vector, float angleRotationValue, GeoVector3F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FRotateToAngleAroundPoint(vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FRotateToAngleAroundPoint(ref GeoVector4F vector, float angleRotationValue, GeoVector3F point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FRotateToAngleAroundPoint(ref vector, angleRotationValue, point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 37, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 38, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 39, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideVector(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 40, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideVector(GeoVector4F lhs, GeoVector4F rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideVector(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 41, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 42, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 43, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, GeoVector4F* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideFloat(lhs, rhs, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 44, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideFloat(GeoVector4F lhs, float rhs, ref GeoVector4F outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideFloat(lhs, rhs, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddAssignVector(GeoVector4F* lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 45, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractAssignVector(GeoVector4F* lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 46, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyAssignVector(GeoVector4F* lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 47, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideAssignVector(GeoVector4F* lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideAssignVector(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 48, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideAssignVector(ref GeoVector4F lhs, GeoVector4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideAssignVector(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddAssignFloat(GeoVector4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 49, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FAddAssignFloat(ref GeoVector4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FAddAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractAssignFloat(GeoVector4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 50, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FSubtractAssignFloat(ref GeoVector4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FSubtractAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyAssignFloat(GeoVector4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 51, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FMultiplyAssignFloat(ref GeoVector4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FMultiplyAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideAssignFloat(GeoVector4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 52, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoVector4F.h")]
        public unsafe int GeoVector4FDivideAssignFloat(ref GeoVector4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoVector4FDivideAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddMatrix(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddMatrix(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractMatrix(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractMatrix(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyMatrix(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyMatrix(GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyMatrix(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddAssignMatrix(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddAssignMatrix(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractAssignMatrix(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractAssignMatrix(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyAssignMatrix(GeoMatrix4x4F* lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyAssignMatrix(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyAssignMatrix(ref GeoMatrix4x4F lhs, GeoMatrix4x4F rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyAssignMatrix(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddFloat(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddFloat(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractFloat(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractFloat(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, GeoMatrix4x4F* result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyFloat(lhs, rhs, result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyFloat(GeoMatrix4x4F lhs, float rhs, ref GeoMatrix4x4F result, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyFloat(lhs, rhs, ref result, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddAssignFloat(GeoMatrix4x4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FAddAssignFloat(ref GeoMatrix4x4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FAddAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractAssignFloat(GeoMatrix4x4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 34, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FSubtractAssignFloat(ref GeoMatrix4x4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FSubtractAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyAssignFloat(GeoMatrix4x4F* lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyAssignFloat(lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 35, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTGeoMatrix4x4F.h")]
        public unsafe int GeoMatrix4x4FMultiplyAssignFloat(ref GeoMatrix4x4F lhs, float rhs, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GeoMatrix4x4FMultiplyAssignFloat(ref lhs, rhs, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetViewMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetViewMatrix(camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetViewMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetViewMatrix(camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetViewMatrix(ref camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetViewMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetViewMatrix(ref camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetViewMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetViewMatrix(camera, inputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetViewMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetViewMatrix(ref camera, inputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetProjectionMatrix(camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetProjectionMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetProjectionMatrix(camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetProjectionMatrix(ref camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetProjectionMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetProjectionMatrix(ref camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetProjectionMatrix(CameraHandle* camera, GeoMatrix4x4F inputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetProjectionMatrix(camera, inputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetProjectionMatrix(ref CameraHandle camera, GeoMatrix4x4F inputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetProjectionMatrix(ref camera, inputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetCameraUboMatrix(CameraHandle* camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetCameraUboMatrix(camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetCameraUboMatrix(CameraHandle* camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetCameraUboMatrix(camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetCameraUboMatrix(ref CameraHandle camera, GeoMatrix4x4F* outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetCameraUboMatrix(ref camera, outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetCameraUboMatrix(ref CameraHandle camera, ref GeoMatrix4x4F outputMatrix, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetCameraUboMatrix(ref camera, ref outputMatrix, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetFrameState(CameraHandle* camera, CameraFrameState* outputFrameState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetFrameState(camera, outputFrameState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetFrameState(CameraHandle* camera, ref CameraFrameState outputFrameState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetFrameState(camera, ref outputFrameState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetFrameState(ref CameraHandle camera, CameraFrameState* outputFrameState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetFrameState(ref camera, outputFrameState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraGetFrameState(ref CameraHandle camera, ref CameraFrameState outputFrameState, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraGetFrameState(ref camera, ref outputFrameState, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetForceResizeCallback(CameraHandle* camera, void* callback, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetForceResizeCallback(camera, callback, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetForceResizeCallback<T0>(CameraHandle* camera, ref T0 callback, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetForceResizeCallback(camera, ref callback, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetForceResizeCallback(ref CameraHandle camera, void* callback, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetForceResizeCallback(ref camera, callback, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraSetForceResizeCallback<T0>(ref CameraHandle camera, ref T0 callback, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraSetForceResizeCallback(ref camera, ref callback, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraDestroy(CameraHandle* camera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraDestroy(camera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTCamera.h")]
        public unsafe int CameraDestroy(ref CameraHandle camera, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = CameraDestroy(ref camera, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, byte* file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(fontSet, file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, ref byte file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(fontSet, ref file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(FontSetHandle* fontSet, string file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(fontSet, file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, byte* file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(ref fontSet, file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, ref byte file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(ref fontSet, ref file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetLoadFontAsTextureSet(ref FontSetHandle fontSet, string file, float fontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetLoadFontAsTextureSet(ref fontSet, file, fontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(FontSetHandle* fontSet, string[] outputFontFileSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputFontFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFontFileSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontFile(fontSet, outputFontFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFontFile, outputFontFileSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(FontSetHandle* fontSet, string[] outputFontFileSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputFontFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFontFileSa);
            var ret = FontSetGetFontFile(fontSet, outputFontFile, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFontFile, outputFontFileSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(FontSetHandle* fontSet, ref byte* outputFontFile, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontFile(fontSet, ref outputFontFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(ref FontSetHandle fontSet, string[] outputFontFileSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputFontFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFontFileSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontFile(ref fontSet, outputFontFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFontFile, outputFontFileSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(ref FontSetHandle fontSet, string[] outputFontFileSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputFontFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFontFileSa);
            var ret = FontSetGetFontFile(ref fontSet, outputFontFile, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFontFile, outputFontFileSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontFile(ref FontSetHandle fontSet, ref byte* outputFontFile, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontFile(ref fontSet, ref outputFontFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontSize(FontSetHandle* fontSet, float* outputFontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontSize(fontSet, outputFontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontSize(FontSetHandle* fontSet, ref float outputFontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontSize(fontSet, ref outputFontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontSize(ref FontSetHandle fontSet, float* outputFontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontSize(ref fontSet, outputFontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTFontSet.h")]
        public unsafe int FontSetGetFontSize(ref FontSetHandle fontSet, ref float outputFontSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = FontSetGetFontSize(ref fontSet, ref outputFontSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTransform(ImageRectHandle* rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTransform(rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTransform(ImageRectHandle* rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTransform(rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTransform(ref ImageRectHandle rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTransform(ref rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 14, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTransform(ref ImageRectHandle rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTransform(ref rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTransform(ImageRectHandle* rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTransform(rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTransform(ref ImageRectHandle rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTransform(ref rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetLayer(ImageRectHandle* rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetLayer(rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetLayer(ImageRectHandle* rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetLayer(rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetLayer(ref ImageRectHandle rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetLayer(ref rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetLayer(ref ImageRectHandle rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetLayer(ref rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetLayer(ImageRectHandle* rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetLayer(rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetLayer(ref ImageRectHandle rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetLayer(ref rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetActive(ImageRectHandle* rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetActive(rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetActive(ImageRectHandle* rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetActive(rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetActive(ref ImageRectHandle rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetActive(ref rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetActive(ref ImageRectHandle rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetActive(ref rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetActive(ImageRectHandle* rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetActive(rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetActive(ref ImageRectHandle rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetActive(ref rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectExecuteObjectBehaviour(ImageRectHandle* rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectExecuteObjectBehaviour(rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectExecuteObjectBehaviour(ref ImageRectHandle rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectExecuteObjectBehaviour(ref rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTexture(ImageRectHandle* rect, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTexture(rect, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTexture(ImageRectHandle* rect, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTexture(rect, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTexture(ref ImageRectHandle rect, TextureHandle** outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTexture(ref rect, outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetTexture(ref ImageRectHandle rect, ref TextureHandle* outputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetTexture(ref rect, ref outputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTexture(ImageRectHandle* rect, TextureHandle* inputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTexture(rect, inputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTexture(ImageRectHandle* rect, ref TextureHandle inputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTexture(rect, ref inputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTexture(ref ImageRectHandle rect, TextureHandle* inputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTexture(ref rect, inputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetTexture(ref ImageRectHandle rect, ref TextureHandle inputTexture, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetTexture(ref rect, ref inputTexture, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetColourTint(ImageRectHandle* rect, RGBAConfigHandle** outputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetColourTint(rect, outputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle* outputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetColourTint(rect, ref outputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetColourTint(ref ImageRectHandle rect, RGBAConfigHandle** outputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetColourTint(ref rect, outputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle* outputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetColourTint(ref rect, ref outputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetColourTint(ImageRectHandle* rect, RGBAConfigHandle* inputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetColourTint(rect, inputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetColourTint(ImageRectHandle* rect, ref RGBAConfigHandle inputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetColourTint(rect, ref inputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetColourTint(ref ImageRectHandle rect, RGBAConfigHandle* inputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetColourTint(ref rect, inputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectSetColourTint(ref ImageRectHandle rect, ref RGBAConfigHandle inputColourTint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectSetColourTint(ref rect, ref inputColourTint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetAsRenderObjectPtr(rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetAsRenderObjectPtr(ImageRectHandle* rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetAsRenderObjectPtr(rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetAsRenderObjectPtr(ref rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTImageRect.h")]
        public unsafe int ImageRectGetAsRenderObjectPtr(ref ImageRectHandle rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = ImageRectGetAsRenderObjectPtr(ref rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetTransform(TextRectHandle* rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetTransform(rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetTransform(TextRectHandle* rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetTransform(rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetTransform(ref TextRectHandle rect, Transform* outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetTransform(ref rect, outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetTransform(ref TextRectHandle rect, ref Transform outputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetTransform(ref rect, ref outputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetTransform(TextRectHandle* rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetTransform(rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetTransform(ref TextRectHandle rect, Transform inputTransform, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetTransform(ref rect, inputTransform, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetLayer(TextRectHandle* rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetLayer(rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetLayer(TextRectHandle* rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetLayer(rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetLayer(ref TextRectHandle rect, int* outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetLayer(ref rect, outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetLayer(ref TextRectHandle rect, ref int outputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetLayer(ref rect, ref outputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetLayer(TextRectHandle* rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetLayer(rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetLayer(ref TextRectHandle rect, int inputLayer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetLayer(ref rect, inputLayer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetActive(TextRectHandle* rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetActive(rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetActive(TextRectHandle* rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetActive(rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetActive(ref TextRectHandle rect, int* outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetActive(ref rect, outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetActive(ref TextRectHandle rect, ref int outputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetActive(ref rect, ref outputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetActive(TextRectHandle* rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetActive(rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetActive(ref TextRectHandle rect, int inputBool, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetActive(ref rect, inputBool, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectExecuteObjectBehaviour(TextRectHandle* rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectExecuteObjectBehaviour(rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectExecuteObjectBehaviour(ref TextRectHandle rect, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectExecuteObjectBehaviour(ref rect, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetColourConfig(TextRectHandle* rect, RGBAConfigHandle** outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetColourConfig(rect, outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle* outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetColourConfig(rect, ref outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetColourConfig(ref TextRectHandle rect, RGBAConfigHandle** outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetColourConfig(ref rect, outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle* outputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetColourConfig(ref rect, ref outputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetColourConfig(TextRectHandle* rect, RGBAConfigHandle* inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetColourConfig(rect, inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetColourConfig(TextRectHandle* rect, ref RGBAConfigHandle inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetColourConfig(rect, ref inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetColourConfig(ref TextRectHandle rect, RGBAConfigHandle* inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetColourConfig(ref rect, inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetColourConfig(ref TextRectHandle rect, ref RGBAConfigHandle inputColourConfig, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetColourConfig(ref rect, ref inputColourConfig, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(TextRectHandle* rect, string[] outputTextSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputText = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputTextSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetText(rect, outputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputText, outputTextSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(TextRectHandle* rect, string[] outputTextSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputText = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputTextSa);
            var ret = TextRectGetText(rect, outputText, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputText, outputTextSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(TextRectHandle* rect, ref byte* outputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetText(rect, ref outputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(ref TextRectHandle rect, string[] outputTextSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputText = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputTextSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetText(ref rect, outputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputText, outputTextSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(ref TextRectHandle rect, string[] outputTextSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputText = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputTextSa);
            var ret = TextRectGetText(ref rect, outputText, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputText, outputTextSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetText(ref TextRectHandle rect, ref byte* outputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetText(ref rect, ref outputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(TextRectHandle* rect, byte* inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(rect, inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(TextRectHandle* rect, ref byte inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(rect, ref inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(TextRectHandle* rect, string inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(rect, inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(ref TextRectHandle rect, byte* inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(ref rect, inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(ref TextRectHandle rect, ref byte inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(ref rect, ref inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetText(ref TextRectHandle rect, string inputText, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetText(ref rect, inputText, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetFontSet(TextRectHandle* rect, FontSetHandle** outputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetFontSet(rect, outputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetFontSet(TextRectHandle* rect, ref FontSetHandle* outputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetFontSet(rect, ref outputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetFontSet(ref TextRectHandle rect, FontSetHandle** outputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetFontSet(ref rect, outputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetFontSet(ref TextRectHandle rect, ref FontSetHandle* outputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetFontSet(ref rect, ref outputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetFontSet(TextRectHandle* rect, FontSetHandle* inputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetFontSet(rect, inputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetFontSet(TextRectHandle* rect, ref FontSetHandle inputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetFontSet(rect, ref inputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetFontSet(ref TextRectHandle rect, FontSetHandle* inputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetFontSet(ref rect, inputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectSetFontSet(ref TextRectHandle rect, ref FontSetHandle inputFontSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectSetFontSet(ref rect, ref inputFontSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetAsRenderObjectPtr(rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetAsRenderObjectPtr(TextRectHandle* rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetAsRenderObjectPtr(rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, RenderObjectHandle** outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetAsRenderObjectPtr(ref rect, outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTextRect.h")]
        public unsafe int TextRectGetAsRenderObjectPtr(ref TextRectHandle rect, ref RenderObjectHandle* outputRenderObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextRectGetAsRenderObjectPtr(ref rect, ref outputRenderObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(TextureHandle* targetTexture, byte* file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(targetTexture, file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(TextureHandle* targetTexture, ref byte file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(targetTexture, ref file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(TextureHandle* targetTexture, string file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(targetTexture, file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(ref TextureHandle targetTexture, byte* file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(ref targetTexture, file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(ref TextureHandle targetTexture, ref byte file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(ref targetTexture, ref file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureLoadPngAsTexture(ref TextureHandle targetTexture, string file, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureLoadPngAsTexture(ref targetTexture, file, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(TextureHandle* targetTexture, string[] outputFileSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFileSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetTextureFile(targetTexture, outputFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFile, outputFileSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(TextureHandle* targetTexture, string[] outputFileSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFileSa);
            var ret = TextureGetTextureFile(targetTexture, outputFile, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFile, outputFileSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(TextureHandle* targetTexture, ref byte* outputFile, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetTextureFile(targetTexture, ref outputFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(ref TextureHandle targetTexture, string[] outputFileSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var outputFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFileSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetTextureFile(ref targetTexture, outputFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFile, outputFileSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(ref TextureHandle targetTexture, string[] outputFileSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var outputFile = (byte**) SilkMarshal.MarshalStringArrayToPtr(outputFileSa);
            var ret = TextureGetTextureFile(ref targetTexture, outputFile, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) outputFile, outputFileSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetTextureFile(ref TextureHandle targetTexture, ref byte* outputFile, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetTextureFile(ref targetTexture, ref outputFile, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetSize(TextureHandle* targetTexture, GeoVector2F* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetSize(targetTexture, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetSize(TextureHandle* targetTexture, ref GeoVector2F outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetSize(targetTexture, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetSize(ref TextureHandle targetTexture, GeoVector2F* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetSize(ref targetTexture, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Graphics/NovelRTTexture.h")]
        public unsafe int TextureGetSize(ref TextureHandle targetTexture, ref GeoVector2F outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = TextureGetSize(ref targetTexture, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointGetPosition(QuadtreePoint* point, GeoVector2F* outputPosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointGetPosition(point, outputPosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointGetPosition(QuadtreePoint* point, ref GeoVector2F outputPosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointGetPosition(point, ref outputPosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointGetPosition(ref QuadtreePoint point, GeoVector2F* outputPosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointGetPosition(ref point, outputPosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointGetPosition(ref QuadtreePoint point, ref GeoVector2F outputPosition, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointGetPosition(ref point, ref outputPosition, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointDelete(QuadtreePoint* point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointDelete(point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTreePoint.h")]
        public unsafe int QuadTreePointDelete(ref QuadtreePoint point, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreePointDelete(ref point, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetParent(QuadTreeHandle* tree, QuadTreeHandle** outputParentTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetParent(tree, outputParentTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetParent(QuadTreeHandle* tree, ref QuadTreeHandle* outputParentTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetParent(tree, ref outputParentTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetParent(ref QuadTreeHandle tree, QuadTreeHandle** outputParentTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetParent(ref tree, outputParentTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetParent(ref QuadTreeHandle tree, ref QuadTreeHandle* outputParentTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetParent(ref tree, ref outputParentTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBounds(QuadTreeHandle* tree, GeoBounds* outputGeoBounds, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBounds(tree, outputGeoBounds, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBounds(QuadTreeHandle* tree, ref GeoBounds outputGeoBounds, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBounds(tree, ref outputGeoBounds, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBounds(ref QuadTreeHandle tree, GeoBounds* outputGeoBounds, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBounds(ref tree, outputGeoBounds, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBounds(ref QuadTreeHandle tree, ref GeoBounds outputGeoBounds, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBounds(ref tree, ref outputGeoBounds, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, QuadtreePoint** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPoint(tree, index, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPoint(QuadTreeHandle* tree, uint index, ref QuadtreePoint* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPoint(tree, index, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, QuadtreePoint** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPoint(ref tree, index, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPoint(ref QuadTreeHandle tree, uint index, ref QuadtreePoint* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPoint(ref tree, index, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPointCount(QuadTreeHandle* tree, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPointCount(tree, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPointCount(QuadTreeHandle* tree, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPointCount(tree, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPointCount(ref QuadTreeHandle tree, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPointCount(ref tree, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetPointCount(ref QuadTreeHandle tree, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetPointCount(ref tree, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopLeft(tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopLeft(tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopLeft(ref tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopLeft(ref tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopRight(tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopRight(tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopRight(ref tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetTopRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetTopRight(ref tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomLeft(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomLeft(tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomLeft(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomLeft(tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomLeft(ref tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomLeft(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomLeft(ref tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomRight(QuadTreeHandle* tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomRight(tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomRight(QuadTreeHandle* tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomRight(tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomRight(ref QuadTreeHandle tree, QuadTreeHandle** outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomRight(ref tree, outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetBottomRight(ref QuadTreeHandle tree, ref QuadTreeHandle* outputCornerTree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetBottomRight(ref tree, ref outputCornerTree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(tree, point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(tree, point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(tree, ref point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(tree, ref point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(ref tree, point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(ref tree, point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(ref tree, ref point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryInsert(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryInsert(ref tree, ref point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(tree, point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(QuadTreeHandle* tree, QuadtreePoint* point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(tree, point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(tree, ref point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(QuadTreeHandle* tree, ref QuadtreePoint point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(tree, ref point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(ref tree, point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(ref QuadTreeHandle tree, QuadtreePoint* point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(ref tree, point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(ref tree, ref point, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeTryRemove(ref QuadTreeHandle tree, ref QuadtreePoint point, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeTryRemove(ref tree, ref point, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetIntersectingPoints(tree, bounds, outputResultVector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetIntersectingPoints(QuadTreeHandle* tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetIntersectingPoints(tree, bounds, ref outputResultVector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, StdVectorQuadTreePoint** outputResultVector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetIntersectingPoints(ref tree, bounds, outputResultVector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 29, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeGetIntersectingPoints(ref QuadTreeHandle tree, GeoBounds bounds, ref StdVectorQuadTreePoint* outputResultVector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeGetIntersectingPoints(ref tree, bounds, ref outputResultVector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorDelete(StdVectorQuadTreePoint* vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorDelete(vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorDelete(ref StdVectorQuadTreePoint vector, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorDelete(ref vector, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetSize(StdVectorQuadTreePoint* vector, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetSize(vector, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetSize(StdVectorQuadTreePoint* vector, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetSize(vector, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetSize(ref StdVectorQuadTreePoint vector, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetSize(ref vector, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetSize(ref StdVectorQuadTreePoint vector, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetSize(ref vector, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, QuadtreePoint** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetPointFromIndex(vector, index, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetPointFromIndex(StdVectorQuadTreePoint* vector, uint index, ref QuadtreePoint* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetPointFromIndex(vector, index, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, QuadtreePoint** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetPointFromIndex(ref vector, index, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int PointVectorGetPointFromIndex(ref StdVectorQuadTreePoint vector, uint index, ref QuadtreePoint* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = PointVectorGetPointFromIndex(ref vector, index, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeDelete(QuadTreeHandle* tree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeDelete(tree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 33, Column 11 in ext/NovelRT/include\\NovelRT.Interop/Maths/NovelRTQuadTree.h")]
        public unsafe int QuadTreeDelete(ref QuadTreeHandle tree, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeDelete(ref tree, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeCreate(QuadTreeScenePointArray* points, QuadTreeNodeHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeCreate(points, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeCreate(QuadTreeScenePointArray* points, ref QuadTreeNodeHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeCreate(points, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, QuadTreeNodeHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeCreate(ref points, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeCreate(ref QuadTreeScenePointArray points, ref QuadTreeNodeHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeCreate(ref points, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopLeft(node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopLeft(node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopLeft(ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopLeft(ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopRight(node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopRight(node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopRight(ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetTopRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetTopRight(ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomLeft(node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomLeft(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomLeft(node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomLeft(ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomLeft(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomLeft(ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomRight(node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomRight(QuadTreeNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomRight(node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomRight(ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeNodeGetBottomRight(ref QuadTreeNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeNodeGetBottomRight(ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, ref pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, ref pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, ref pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, pointTwo, ref pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, ref pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, ref pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, ref pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(QuadTreeScenePointHandle* pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(pointOne, ref pointTwo, ref pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, ref pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, ref pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, ref pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, QuadTreeScenePointHandle* pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, pointTwo, ref pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, QuadTreeScenePointHandle* pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, ref pointThree, pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, QuadTreeScenePointHandle* pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, ref pointThree, pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, QuadTreeScenePointArray** outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, ref pointThree, ref pointFour, outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeNode.h")]
        public unsafe int QuadTreeScenePointArrayCreate(ref QuadTreeScenePointHandle pointOne, ref QuadTreeScenePointHandle pointTwo, ref QuadTreeScenePointHandle pointThree, ref QuadTreeScenePointHandle pointFour, ref QuadTreeScenePointArray* outputArray, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointArrayCreate(ref pointOne, ref pointTwo, ref pointThree, ref pointFour, ref outputArray, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateVector(position, node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateVector(GeoVector2F position, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateVector(position, node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateVector(position, ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateVector(GeoVector2F position, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateVector(position, ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateFloat(x, y, node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateFloat(float x, float y, SceneNodeHandle* node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateFloat(x, y, node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, QuadTreeScenePointHandle** outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateFloat(x, y, ref node, outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointCreateFloat(float x, float y, ref SceneNodeHandle node, ref QuadTreeScenePointHandle* outputPoint, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointCreateFloat(x, y, ref node, ref outputPoint, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, SceneNodeHandle** outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointGetSceneNode(point, outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointGetSceneNode(QuadTreeScenePointHandle* point, ref SceneNodeHandle* outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointGetSceneNode(point, ref outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, SceneNodeHandle** outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointGetSceneNode(ref point, outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTQuadTreeScenePoint.h")]
        public unsafe int QuadTreeScenePointGetSceneNode(ref QuadTreeScenePointHandle point, ref SceneNodeHandle* outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = QuadTreeScenePointGetSceneNode(ref point, ref outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeCreate(RenderObjectHandle* @object, RenderObjectNodeHandle** outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeCreate(@object, outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeCreate(RenderObjectHandle* @object, ref RenderObjectNodeHandle* outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeCreate(@object, ref outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeCreate(ref RenderObjectHandle @object, RenderObjectNodeHandle** outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeCreate(ref @object, outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeCreate(ref RenderObjectHandle @object, ref RenderObjectNodeHandle* outputNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeCreate(ref @object, ref outputNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, RenderObjectHandle** outputObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeGetRenderObject(node, outputObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeGetRenderObject(RenderObjectNodeHandle* node, ref RenderObjectHandle* outputObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeGetRenderObject(node, ref outputObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, RenderObjectHandle** outputObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeGetRenderObject(ref node, outputObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeGetRenderObject(ref RenderObjectNodeHandle node, ref RenderObjectHandle* outputObject, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeGetRenderObject(ref node, ref outputObject, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeDelete(RenderObjectNodeHandle* node, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeDelete(node, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTRenderObjectNode.h")]
        public unsafe int RenderObjectNodeDelete(ref RenderObjectNodeHandle node, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = RenderObjectNodeDelete(ref node, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneGetNodes(SceneHandle* scene, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneGetNodes(scene, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneGetNodes(SceneHandle* scene, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneGetNodes(scene, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneGetNodes(ref SceneHandle scene, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneGetNodes(ref scene, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneGetNodes(ref SceneHandle scene, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneGetNodes(ref scene, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(scene, nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(SceneHandle* scene, SceneNodeHandle* nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(scene, nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(scene, ref nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(SceneHandle* scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(scene, ref nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(ref scene, nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(ref SceneHandle scene, SceneNodeHandle* nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(ref scene, nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(ref scene, ref nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneInsert(ref SceneHandle scene, ref SceneNodeHandle nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneInsert(ref scene, ref nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(scene, nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(SceneHandle* scene, SceneNodeHandle* nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(scene, nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(scene, ref nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(SceneHandle* scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(scene, ref nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(ref scene, nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(ref SceneHandle scene, SceneNodeHandle* nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(ref scene, nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(ref scene, ref nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneRemove(ref SceneHandle scene, ref SceneNodeHandle nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneRemove(ref scene, ref nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneDelete(SceneHandle* scene, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneDelete(scene, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTScene.h")]
        public unsafe int SceneDelete(ref SceneHandle scene, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneDelete(ref scene, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetChildren(SceneNodeHandle* node, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetChildren(node, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetChildren(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetChildren(node, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetChildren(ref SceneNodeHandle node, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetChildren(ref node, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetChildren(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetChildren(ref node, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetParents(SceneNodeHandle* node, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetParents(node, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetParents(SceneNodeHandle* node, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetParents(node, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetParents(ref SceneNodeHandle node, StdSetSceneNode** outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetParents(ref node, outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeGetParents(ref SceneNodeHandle node, ref StdSetSceneNode* outputSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeGetParents(ref node, ref outputSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(node, nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(SceneNodeHandle* node, SceneNodeHandle* nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(node, nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(node, ref nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(SceneNodeHandle* node, ref SceneNodeHandle nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(node, ref nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(ref node, nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(ref SceneNodeHandle node, SceneNodeHandle* nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(ref node, nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(ref node, ref nodeToInsert, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeInsert(ref SceneNodeHandle node, ref SceneNodeHandle nodeToInsert, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeInsert(ref node, ref nodeToInsert, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(node, nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(SceneNodeHandle* node, SceneNodeHandle* nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(node, nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(node, ref nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(SceneNodeHandle* node, ref SceneNodeHandle nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(node, ref nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(ref node, nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(ref SceneNodeHandle node, SceneNodeHandle* nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(ref node, nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(ref node, ref nodeToRemove, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeRemove(ref SceneNodeHandle node, ref SceneNodeHandle nodeToRemove, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeRemove(ref node, ref nodeToRemove, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(firstNode, secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(firstNode, secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(firstNode, ref secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(firstNode, ref secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(ref firstNode, secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(ref firstNode, secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(ref firstNode, ref secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeIsAdjacent(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeIsAdjacent(ref firstNode, ref secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirst(SceneNodeHandle* node, void* action, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirst(node, action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirst<T0>(SceneNodeHandle* node, ref T0 action, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirst(node, ref action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirst(ref SceneNodeHandle node, void* action, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirst(ref node, action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirst<T0>(ref SceneNodeHandle node, ref T0 action, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirst(ref node, ref action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, BreadthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(node, action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator(SceneNodeHandle* node, void* action, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(node, action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, BreadthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(node, ref action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(node, ref action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, BreadthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(ref node, action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator(ref SceneNodeHandle node, void* action, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(ref node, action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, BreadthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(ref node, ref action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseBreadthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseBreadthFirstWithIterator(ref node, ref action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirst(SceneNodeHandle* node, void* action, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirst(node, action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirst<T0>(SceneNodeHandle* node, ref T0 action, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirst(node, ref action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirst(ref SceneNodeHandle node, void* action, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirst(ref node, action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirst<T0>(ref SceneNodeHandle node, ref T0 action, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirst(ref node, ref action, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, DepthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(node, action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator(SceneNodeHandle* node, void* action, ref DepthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(node, action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, DepthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(node, ref action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator<T0>(SceneNodeHandle* node, ref T0 action, ref DepthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(node, ref action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, DepthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(ref node, action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator(ref SceneNodeHandle node, void* action, ref DepthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(ref node, action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, DepthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(ref node, ref action, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeTraverseDepthFirstWithIterator<T0>(ref SceneNodeHandle node, ref T0 action, ref DepthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeTraverseDepthFirstWithIterator(ref node, ref action, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(firstNode, secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(SceneNodeHandle* firstNode, SceneNodeHandle* secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(firstNode, secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(firstNode, ref secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(SceneNodeHandle* firstNode, ref SceneNodeHandle secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(firstNode, ref secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(ref firstNode, secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(ref SceneNodeHandle firstNode, SceneNodeHandle* secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(ref firstNode, secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(ref firstNode, ref secondNode, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeCanReach(ref SceneNodeHandle firstNode, ref SceneNodeHandle secondNode, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeCanReach(ref firstNode, ref secondNode, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeDelete(SceneNodeHandle* node, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDelete(node, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeDelete(ref SceneNodeHandle node, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDelete(ref node, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetDelete(StdSetSceneNode* nodeSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetDelete(nodeSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetDelete(ref StdSetSceneNode nodeSet, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetDelete(ref nodeSet, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSize(nodeSet, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSize(StdSetSceneNode* nodeSet, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSize(nodeSet, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, uint* outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSize(ref nodeSet, outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 31, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSize(ref StdSetSceneNode nodeSet, ref uint outputSize, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSize(ref nodeSet, ref outputSize, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, SceneNodeHandle** outputSceneNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSceneNodeFromIndex(nodeSet, index, outputSceneNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSceneNodeFromIndex(StdSetSceneNode* nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSceneNodeFromIndex(nodeSet, index, ref outputSceneNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, SceneNodeHandle** outputSceneNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSceneNodeFromIndex(ref nodeSet, index, outputSceneNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 32, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNode.h")]
        public unsafe int SceneNodeSetGetSceneNodeFromIndex(ref StdSetSceneNode nodeSet, uint index, ref SceneNodeHandle* outputSceneNode, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeSetGetSceneNodeFromIndex(ref nodeSet, index, ref outputSceneNode, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, BreadthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(node, func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(node, func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, BreadthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(node, ref func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(node, ref func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, BreadthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(ref node, func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(ref node, func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, BreadthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(ref node, ref func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref BreadthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorCreate(ref node, ref func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIncrement(BreadthFirstIterator* iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIncrement(iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIncrement(ref BreadthFirstIterator iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIncrement(ref iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorPostFixIncrement(BreadthFirstIterator* iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorPostFixIncrement(iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorPostFixIncrement(ref BreadthFirstIterator iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorPostFixIncrement(ref iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEnd(iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEnd(BreadthFirstIterator* iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEnd(iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEnd(ref iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEnd(ref BreadthFirstIterator iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEnd(ref iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorRunFunction(iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorRunFunction(BreadthFirstIterator* iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorRunFunction(iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorRunFunction(ref iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorRunFunction(ref BreadthFirstIterator iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorRunFunction(ref iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(ref iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(ref iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(ref iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsEqual(ref iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, BreadthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(BreadthFirstIterator* iterator, ref BreadthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(ref iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, BreadthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(ref iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(ref iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeBreadthFirstIterator.h")]
        public unsafe int SceneNodeBreadthFirstIteratorIsNotEqual(ref BreadthFirstIterator iterator, ref BreadthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeBreadthFirstIteratorIsNotEqual(ref iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, DepthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(node, func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate(SceneNodeHandle* node, void* func, ref DepthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(node, func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, DepthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(node, ref func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate<T0>(SceneNodeHandle* node, ref T0 func, ref DepthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(node, ref func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, DepthFirstIterator** outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(ref node, func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate(ref SceneNodeHandle node, void* func, ref DepthFirstIterator* outputIterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(ref node, func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, DepthFirstIterator** outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(ref node, ref func, outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorCreate<T0>(ref SceneNodeHandle node, ref T0 func, ref DepthFirstIterator* outputIterator, string[] errorMessageSa) where T0 : unmanaged
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorCreate(ref node, ref func, ref outputIterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIncrement(DepthFirstIterator* iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIncrement(iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIncrement(ref DepthFirstIterator iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIncrement(ref iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorPostFixIncrement(DepthFirstIterator* iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorPostFixIncrement(iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorPostFixIncrement(ref DepthFirstIterator iterator, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorPostFixIncrement(ref iterator, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEnd(iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEnd(DepthFirstIterator* iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEnd(iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEnd(ref iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEnd(ref DepthFirstIterator iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEnd(ref iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorRunFunction(iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorRunFunction(DepthFirstIterator* iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorRunFunction(iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorRunFunction(ref iterator, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorRunFunction(ref DepthFirstIterator iterator, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorRunFunction(ref iterator, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(ref iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(ref iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(ref iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsEqual(ref iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, DepthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(DepthFirstIterator* iterator, ref DepthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(ref iterator, other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, DepthFirstIterator* other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(ref iterator, other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, int* outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(ref iterator, ref other, outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/SceneGraph/NovelRTSceneNodeDepthFirstIterator.h")]
        public unsafe int SceneNodeDepthFirstIteratorIsNotEqual(ref DepthFirstIterator iterator, ref DepthFirstIterator other, ref int outputResult, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = SceneNodeDepthFirstIteratorIsNotEqual(ref iterator, ref other, ref outputResult, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, StepTimerHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerCreate(targetFrameRate, maxSecondDelta, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 15, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerCreate(uint targetFrameRate, double maxSecondDelta, ref StepTimerHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerCreate(targetFrameRate, maxSecondDelta, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTicks(StepTimerHandle* timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTicks(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTicks(StepTimerHandle* timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTicks(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTicks(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 16, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTicks(ref StepTimerHandle timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTicks(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTicks(StepTimerHandle* timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTicks(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTicks(StepTimerHandle* timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTicks(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTicks(ref StepTimerHandle timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTicks(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 17, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTicks(ref StepTimerHandle timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTicks(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTime(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTime(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTime(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 18, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetElapsedTime(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTime(StepTimerHandle* timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTime(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTime(StepTimerHandle* timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTime(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTime(ref StepTimerHandle timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTime(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 19, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTotalTime(ref StepTimerHandle timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTotalTime(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTicks(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTicks(StepTimerHandle* timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTicks(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ulong* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTicks(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 20, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTicks(ref StepTimerHandle timer, ref ulong output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTicks(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTicks(StepTimerHandle* timer, ulong input, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTicks(timer, input, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 21, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTicks(ref StepTimerHandle timer, ulong input, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTicks(ref timer, input, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTime(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTime(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle** output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTime(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 22, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetTargetElapsedTime(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, TimestampHandle* target, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTime(timer, target, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTime(StepTimerHandle* timer, ref TimestampHandle target, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTime(timer, ref target, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, TimestampHandle* target, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTime(ref timer, target, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 23, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetTargetElapsedTime(ref StepTimerHandle timer, ref TimestampHandle target, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetTargetElapsedTime(ref timer, ref target, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFrameCount(StepTimerHandle* timer, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFrameCount(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFrameCount(StepTimerHandle* timer, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFrameCount(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFrameCount(ref StepTimerHandle timer, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFrameCount(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 24, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFrameCount(ref StepTimerHandle timer, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFrameCount(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFramesPerSecond(StepTimerHandle* timer, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFramesPerSecond(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFramesPerSecond(StepTimerHandle* timer, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFramesPerSecond(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, uint* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFramesPerSecond(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 25, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetFramesPerSecond(ref StepTimerHandle timer, ref uint output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetFramesPerSecond(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, int* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetIsFixedTimeStep(timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetIsFixedTimeStep(StepTimerHandle* timer, ref int output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetIsFixedTimeStep(timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, int* output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetIsFixedTimeStep(ref timer, output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 26, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerGetIsFixedTimeStep(ref StepTimerHandle timer, ref int output, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerGetIsFixedTimeStep(ref timer, ref output, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetIsFixedTimeStep(StepTimerHandle* timer, int input, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetIsFixedTimeStep(timer, input, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 27, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerSetIsFixedTimeStep(ref StepTimerHandle timer, int input, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerSetIsFixedTimeStep(ref timer, input, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerResetElapsedTime(StepTimerHandle* timer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerResetElapsedTime(timer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 28, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerResetElapsedTime(ref StepTimerHandle timer, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerResetElapsedTime(ref timer, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerTick(StepTimerHandle* timer, UtilitiesEventWithTimestampHandle* @event, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerTick(timer, @event, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerTick(StepTimerHandle* timer, ref UtilitiesEventWithTimestampHandle @event, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerTick(timer, ref @event, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerTick(ref StepTimerHandle timer, UtilitiesEventWithTimestampHandle* @event, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerTick(ref timer, @event, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 30, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Timing/NovelRTStepTimer.h")]
        public unsafe int StepTimerTick(ref StepTimerHandle timer, ref UtilitiesEventWithTimestampHandle @event, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = StepTimerTick(ref timer, ref @event, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        public unsafe int GetExecutableDirPath(string[] pathSa, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var path = (byte**) SilkMarshal.MarshalStringArrayToPtr(pathSa);
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GetExecutableDirPath(path, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) path, pathSa);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        public unsafe int GetExecutableDirPath(string[] pathSa, ref byte* errorMessage)
        {
            // StringArrayOverloader
            var path = (byte**) SilkMarshal.MarshalStringArrayToPtr(pathSa);
            var ret = GetExecutableDirPath(path, ref errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) path, pathSa);
            return ret;
        }

        /// <summary>To be added.</summary>
        [NativeName("Src", "Line 12, Column 9 in ext/NovelRT/include\\NovelRT.Interop/Utilities/NovelRTMisc.h")]
        public unsafe int GetExecutableDirPath(ref byte* path, string[] errorMessageSa)
        {
            // StringArrayOverloader
            var errorMessage = (byte**) SilkMarshal.MarshalStringArrayToPtr(errorMessageSa);
            var ret = GetExecutableDirPath(ref path, errorMessage);
            SilkMarshal.CopyPtrToStringArray((IntPtr) errorMessage, errorMessageSa);
            return ret;
        }


        public NovelRT(INativeContext ctx)
            : base(ctx)
        {
        }
    }
}

